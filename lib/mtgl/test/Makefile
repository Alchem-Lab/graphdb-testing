# Makefile.in generated by automake 1.11.3 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- Makefile -*-

pkgdatadir = $(datadir)/mtgl
pkgincludedir = $(includedir)/mtgl
pkglibdir = $(libdir)/mtgl
pkglibexecdir = $(libexecdir)/mtgl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
check_PROGRAMS = custom2file$(EXEEXT) graph2file$(EXEEXT) \
	persist_graph$(EXEEXT) test_badrank$(EXEEXT) \
	test_breadth_first_search$(EXEEXT) \
	test_connected_components$(EXEEXT) \
	test_expand_one_edge$(EXEEXT) test_independent_set$(EXEEXT) \
	test_pagerank$(EXEEXT) test_pseudo_diameter$(EXEEXT) \
	test_triangles$(EXEEXT) test_wcnm$(EXEEXT)
EXTRA_PROGRAMS = generate_euler_tour$(EXEEXT) rmat2file$(EXEEXT) \
	subiso_5cycles$(EXEEXT) subiso_triangles$(EXEEXT) \
	switch_endianness$(EXEEXT) test_adjacency_iteration$(EXEEXT) \
	test_duplicate$(EXEEXT) test_dynamic_array$(EXEEXT) \
	test_edmonds_karp$(EXEEXT) test_edmonds_karp_small$(EXEEXT) \
	test_filtering$(EXEEXT) test_graph$(EXEEXT) \
	test_graph_parallel$(EXEEXT) test_hachar$(EXEEXT) \
	test_mmap$(EXEEXT) test_mtgl_strtok$(EXEEXT) \
	test_mutable_graph$(EXEEXT) test_numeric$(EXEEXT) \
	test_partitioning_schemes$(EXEEXT) test_persist_xht$(EXEEXT) \
	test_property_map$(EXEEXT) test_random$(EXEEXT) \
	test_read_graph$(EXEEXT) test_shared_ptr$(EXEEXT) \
	test_sort$(EXEEXT) test_sssp_deltastepping$(EXEEXT) \
	test_subgraph$(EXEEXT) test_subgraph_isomorphism$(EXEEXT) \
	test_vertex_betweenness$(EXEEXT) test_write_graph$(EXEEXT) \
	test_xmt_hash_set$(EXEEXT) test_xmt_hash_table$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/mtgl_check_atomics.m4 \
	$(top_srcdir)/config/mtgl_check_qthreads.m4 \
	$(top_srcdir)/config/mtgl_compiler_option.m4 \
	$(top_srcdir)/config/mtgl_compiler_options.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/mtgl/mtgl_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_custom2file_OBJECTS = custom2file-custom2file.$(OBJEXT)
custom2file_OBJECTS = $(am_custom2file_OBJECTS)
custom2file_LDADD = $(LDADD)
custom2file_LINK = $(CXXLD) $(custom2file_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_generate_euler_tour_OBJECTS =  \
	generate_euler_tour-generate_euler_tour.$(OBJEXT)
generate_euler_tour_OBJECTS = $(am_generate_euler_tour_OBJECTS)
generate_euler_tour_LDADD = $(LDADD)
generate_euler_tour_LINK = $(CXXLD) $(generate_euler_tour_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_graph2file_OBJECTS = graph2file-graph2file.$(OBJEXT)
graph2file_OBJECTS = $(am_graph2file_OBJECTS)
graph2file_LDADD = $(LDADD)
graph2file_LINK = $(CXXLD) $(graph2file_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_persist_graph_OBJECTS = persist_graph-persist_graph.$(OBJEXT)
persist_graph_OBJECTS = $(am_persist_graph_OBJECTS)
persist_graph_LDADD = $(LDADD)
persist_graph_LINK = $(CXXLD) $(persist_graph_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_rmat2file_OBJECTS = rmat2file-rmat2file.$(OBJEXT)
rmat2file_OBJECTS = $(am_rmat2file_OBJECTS)
rmat2file_LDADD = $(LDADD)
rmat2file_LINK = $(CXXLD) $(rmat2file_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_subiso_5cycles_OBJECTS = subiso_5cycles-subiso_5cycles.$(OBJEXT)
subiso_5cycles_OBJECTS = $(am_subiso_5cycles_OBJECTS)
subiso_5cycles_LDADD = $(LDADD)
subiso_5cycles_LINK = $(CXXLD) $(subiso_5cycles_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_subiso_triangles_OBJECTS =  \
	subiso_triangles-subiso_triangles.$(OBJEXT)
subiso_triangles_OBJECTS = $(am_subiso_triangles_OBJECTS)
subiso_triangles_LDADD = $(LDADD)
subiso_triangles_LINK = $(CXXLD) $(subiso_triangles_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_switch_endianness_OBJECTS =  \
	switch_endianness-switch_endianness.$(OBJEXT)
switch_endianness_OBJECTS = $(am_switch_endianness_OBJECTS)
switch_endianness_LDADD = $(LDADD)
switch_endianness_LINK = $(CXXLD) $(switch_endianness_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_adjacency_iteration_OBJECTS =  \
	test_adjacency_iteration-test_adjacency_iteration.$(OBJEXT)
test_adjacency_iteration_OBJECTS =  \
	$(am_test_adjacency_iteration_OBJECTS)
test_adjacency_iteration_LDADD = $(LDADD)
test_adjacency_iteration_LINK = $(CXXLD) \
	$(test_adjacency_iteration_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_badrank_OBJECTS = test_badrank-test_badrank.$(OBJEXT)
test_badrank_OBJECTS = $(am_test_badrank_OBJECTS)
test_badrank_LDADD = $(LDADD)
test_badrank_LINK = $(CXXLD) $(test_badrank_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_breadth_first_search_OBJECTS =  \
	test_breadth_first_search-test_breadth_first_search.$(OBJEXT)
test_breadth_first_search_OBJECTS =  \
	$(am_test_breadth_first_search_OBJECTS)
test_breadth_first_search_LDADD = $(LDADD)
test_breadth_first_search_LINK = $(CXXLD) \
	$(test_breadth_first_search_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_connected_components_OBJECTS =  \
	test_connected_components-test_connected_components.$(OBJEXT)
test_connected_components_OBJECTS =  \
	$(am_test_connected_components_OBJECTS)
test_connected_components_LDADD = $(LDADD)
test_connected_components_LINK = $(CXXLD) \
	$(test_connected_components_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_duplicate_OBJECTS = test_duplicate-test_duplicate.$(OBJEXT)
test_duplicate_OBJECTS = $(am_test_duplicate_OBJECTS)
test_duplicate_LDADD = $(LDADD)
test_duplicate_LINK = $(CXXLD) $(test_duplicate_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_dynamic_array_OBJECTS =  \
	test_dynamic_array-test_dynamic_array.$(OBJEXT)
test_dynamic_array_OBJECTS = $(am_test_dynamic_array_OBJECTS)
test_dynamic_array_LDADD = $(LDADD)
test_dynamic_array_LINK = $(CXXLD) $(test_dynamic_array_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_edmonds_karp_OBJECTS =  \
	test_edmonds_karp-test_edmonds_karp.$(OBJEXT)
test_edmonds_karp_OBJECTS = $(am_test_edmonds_karp_OBJECTS)
test_edmonds_karp_LDADD = $(LDADD)
test_edmonds_karp_LINK = $(CXXLD) $(test_edmonds_karp_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_edmonds_karp_small_OBJECTS =  \
	test_edmonds_karp_small-test_edmonds_karp_small.$(OBJEXT)
test_edmonds_karp_small_OBJECTS =  \
	$(am_test_edmonds_karp_small_OBJECTS)
test_edmonds_karp_small_LDADD = $(LDADD)
test_edmonds_karp_small_LINK = $(CXXLD) \
	$(test_edmonds_karp_small_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_expand_one_edge_OBJECTS =  \
	test_expand_one_edge-test_expand_one_edge.$(OBJEXT)
test_expand_one_edge_OBJECTS = $(am_test_expand_one_edge_OBJECTS)
test_expand_one_edge_LDADD = $(LDADD)
test_expand_one_edge_LINK = $(CXXLD) $(test_expand_one_edge_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_filtering_OBJECTS = test_filtering-test_filtering.$(OBJEXT)
test_filtering_OBJECTS = $(am_test_filtering_OBJECTS)
test_filtering_LDADD = $(LDADD)
test_filtering_LINK = $(CXXLD) $(test_filtering_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_graph_OBJECTS = test_graph-test_graph.$(OBJEXT)
test_graph_OBJECTS = $(am_test_graph_OBJECTS)
test_graph_LDADD = $(LDADD)
test_graph_LINK = $(CXXLD) $(test_graph_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_graph_parallel_OBJECTS =  \
	test_graph_parallel-test_graph_parallel.$(OBJEXT)
test_graph_parallel_OBJECTS = $(am_test_graph_parallel_OBJECTS)
test_graph_parallel_LDADD = $(LDADD)
test_graph_parallel_LINK = $(CXXLD) $(test_graph_parallel_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_hachar_OBJECTS = test_hachar-test_hachar.$(OBJEXT)
test_hachar_OBJECTS = $(am_test_hachar_OBJECTS)
test_hachar_LDADD = $(LDADD)
test_hachar_LINK = $(CXXLD) $(test_hachar_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_independent_set_OBJECTS =  \
	test_independent_set-test_independent_set.$(OBJEXT)
test_independent_set_OBJECTS = $(am_test_independent_set_OBJECTS)
test_independent_set_LDADD = $(LDADD)
test_independent_set_LINK = $(CXXLD) $(test_independent_set_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_mmap_OBJECTS = test_mmap-test_mmap.$(OBJEXT)
test_mmap_OBJECTS = $(am_test_mmap_OBJECTS)
test_mmap_LDADD = $(LDADD)
test_mmap_LINK = $(CXXLD) $(test_mmap_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_mtgl_strtok_OBJECTS =  \
	test_mtgl_strtok-test_mtgl_strtok.$(OBJEXT)
test_mtgl_strtok_OBJECTS = $(am_test_mtgl_strtok_OBJECTS)
test_mtgl_strtok_LDADD = $(LDADD)
test_mtgl_strtok_LINK = $(CXXLD) $(test_mtgl_strtok_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_mutable_graph_OBJECTS =  \
	test_mutable_graph-test_mutable_graph.$(OBJEXT)
test_mutable_graph_OBJECTS = $(am_test_mutable_graph_OBJECTS)
test_mutable_graph_LDADD = $(LDADD)
test_mutable_graph_LINK = $(CXXLD) $(test_mutable_graph_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_numeric_OBJECTS = test_numeric-test_numeric.$(OBJEXT)
test_numeric_OBJECTS = $(am_test_numeric_OBJECTS)
test_numeric_LDADD = $(LDADD)
test_numeric_LINK = $(CXXLD) $(test_numeric_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_pagerank_OBJECTS = test_pagerank-test_pagerank.$(OBJEXT)
test_pagerank_OBJECTS = $(am_test_pagerank_OBJECTS)
test_pagerank_LDADD = $(LDADD)
test_pagerank_LINK = $(CXXLD) $(test_pagerank_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_partitioning_schemes_OBJECTS =  \
	test_partitioning_schemes-test_partitioning_schemes.$(OBJEXT)
test_partitioning_schemes_OBJECTS =  \
	$(am_test_partitioning_schemes_OBJECTS)
test_partitioning_schemes_LDADD = $(LDADD)
test_partitioning_schemes_LINK = $(CXXLD) \
	$(test_partitioning_schemes_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_persist_xht_OBJECTS =  \
	test_persist_xht-test_persist_xht.$(OBJEXT)
test_persist_xht_OBJECTS = $(am_test_persist_xht_OBJECTS)
test_persist_xht_LDADD = $(LDADD)
test_persist_xht_LINK = $(CXXLD) $(test_persist_xht_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_property_map_OBJECTS =  \
	test_property_map-test_property_map.$(OBJEXT)
test_property_map_OBJECTS = $(am_test_property_map_OBJECTS)
test_property_map_LDADD = $(LDADD)
test_property_map_LINK = $(CXXLD) $(test_property_map_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_pseudo_diameter_OBJECTS =  \
	test_pseudo_diameter-test_pseudo_diameter.$(OBJEXT)
test_pseudo_diameter_OBJECTS = $(am_test_pseudo_diameter_OBJECTS)
test_pseudo_diameter_LDADD = $(LDADD)
test_pseudo_diameter_LINK = $(CXXLD) $(test_pseudo_diameter_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_random_OBJECTS = test_random-test_random.$(OBJEXT)
test_random_OBJECTS = $(am_test_random_OBJECTS)
test_random_LDADD = $(LDADD)
test_random_LINK = $(CXXLD) $(test_random_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_read_graph_OBJECTS =  \
	test_read_graph-test_read_graph.$(OBJEXT)
test_read_graph_OBJECTS = $(am_test_read_graph_OBJECTS)
test_read_graph_LDADD = $(LDADD)
test_read_graph_LINK = $(CXXLD) $(test_read_graph_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_shared_ptr_OBJECTS =  \
	test_shared_ptr-test_shared_ptr.$(OBJEXT)
test_shared_ptr_OBJECTS = $(am_test_shared_ptr_OBJECTS)
test_shared_ptr_LDADD = $(LDADD)
test_shared_ptr_LINK = $(CXXLD) $(test_shared_ptr_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_sort_OBJECTS = test_sort-test_sort.$(OBJEXT)
test_sort_OBJECTS = $(am_test_sort_OBJECTS)
test_sort_LDADD = $(LDADD)
test_sort_LINK = $(CXXLD) $(test_sort_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_sssp_deltastepping_OBJECTS =  \
	test_sssp_deltastepping-test_sssp_deltastepping.$(OBJEXT)
test_sssp_deltastepping_OBJECTS =  \
	$(am_test_sssp_deltastepping_OBJECTS)
test_sssp_deltastepping_LDADD = $(LDADD)
test_sssp_deltastepping_LINK = $(CXXLD) \
	$(test_sssp_deltastepping_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_subgraph_OBJECTS = test_subgraph-test_subgraph.$(OBJEXT)
test_subgraph_OBJECTS = $(am_test_subgraph_OBJECTS)
test_subgraph_LDADD = $(LDADD)
test_subgraph_LINK = $(CXXLD) $(test_subgraph_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_subgraph_isomorphism_OBJECTS =  \
	test_subgraph_isomorphism-test_subgraph_isomorphism.$(OBJEXT)
test_subgraph_isomorphism_OBJECTS =  \
	$(am_test_subgraph_isomorphism_OBJECTS)
test_subgraph_isomorphism_LDADD = $(LDADD)
test_subgraph_isomorphism_LINK = $(CXXLD) \
	$(test_subgraph_isomorphism_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_triangles_OBJECTS = test_triangles-test_triangles.$(OBJEXT)
test_triangles_OBJECTS = $(am_test_triangles_OBJECTS)
test_triangles_LDADD = $(LDADD)
test_triangles_LINK = $(CXXLD) $(test_triangles_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_vertex_betweenness_OBJECTS =  \
	test_vertex_betweenness-test_vertex_betweenness.$(OBJEXT)
test_vertex_betweenness_OBJECTS =  \
	$(am_test_vertex_betweenness_OBJECTS)
test_vertex_betweenness_LDADD = $(LDADD)
test_vertex_betweenness_LINK = $(CXXLD) \
	$(test_vertex_betweenness_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_wcnm_OBJECTS = test_wcnm-test_wcnm.$(OBJEXT) \
	test_wcnm-ufl.$(OBJEXT) test_wcnm-VolVolume.$(OBJEXT)
test_wcnm_OBJECTS = $(am_test_wcnm_OBJECTS)
test_wcnm_LDADD = $(LDADD)
test_wcnm_LINK = $(CXXLD) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_write_graph_OBJECTS =  \
	test_write_graph-test_write_graph.$(OBJEXT)
test_write_graph_OBJECTS = $(am_test_write_graph_OBJECTS)
test_write_graph_LDADD = $(LDADD)
test_write_graph_LINK = $(CXXLD) $(test_write_graph_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_xmt_hash_set_OBJECTS =  \
	test_xmt_hash_set-test_xmt_hash_set.$(OBJEXT)
test_xmt_hash_set_OBJECTS = $(am_test_xmt_hash_set_OBJECTS)
test_xmt_hash_set_LDADD = $(LDADD)
test_xmt_hash_set_LINK = $(CXXLD) $(test_xmt_hash_set_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_xmt_hash_table_OBJECTS =  \
	test_xmt_hash_table-test_xmt_hash_table.$(OBJEXT)
test_xmt_hash_table_OBJECTS = $(am_test_xmt_hash_table_OBJECTS)
test_xmt_hash_table_LDADD = $(LDADD)
test_xmt_hash_table_LINK = $(CXXLD) $(test_xmt_hash_table_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(custom2file_SOURCES) $(generate_euler_tour_SOURCES) \
	$(graph2file_SOURCES) $(persist_graph_SOURCES) \
	$(rmat2file_SOURCES) $(subiso_5cycles_SOURCES) \
	$(subiso_triangles_SOURCES) $(switch_endianness_SOURCES) \
	$(test_adjacency_iteration_SOURCES) $(test_badrank_SOURCES) \
	$(test_breadth_first_search_SOURCES) \
	$(test_connected_components_SOURCES) $(test_duplicate_SOURCES) \
	$(test_dynamic_array_SOURCES) $(test_edmonds_karp_SOURCES) \
	$(test_edmonds_karp_small_SOURCES) \
	$(test_expand_one_edge_SOURCES) $(test_filtering_SOURCES) \
	$(test_graph_SOURCES) $(test_graph_parallel_SOURCES) \
	$(test_hachar_SOURCES) $(test_independent_set_SOURCES) \
	$(test_mmap_SOURCES) $(test_mtgl_strtok_SOURCES) \
	$(test_mutable_graph_SOURCES) $(test_numeric_SOURCES) \
	$(test_pagerank_SOURCES) $(test_partitioning_schemes_SOURCES) \
	$(test_persist_xht_SOURCES) $(test_property_map_SOURCES) \
	$(test_pseudo_diameter_SOURCES) $(test_random_SOURCES) \
	$(test_read_graph_SOURCES) $(test_shared_ptr_SOURCES) \
	$(test_sort_SOURCES) $(test_sssp_deltastepping_SOURCES) \
	$(test_subgraph_SOURCES) $(test_subgraph_isomorphism_SOURCES) \
	$(test_triangles_SOURCES) $(test_vertex_betweenness_SOURCES) \
	$(test_wcnm_SOURCES) $(test_write_graph_SOURCES) \
	$(test_xmt_hash_set_SOURCES) $(test_xmt_hash_table_SOURCES)
DIST_SOURCES = $(custom2file_SOURCES) $(generate_euler_tour_SOURCES) \
	$(graph2file_SOURCES) $(persist_graph_SOURCES) \
	$(rmat2file_SOURCES) $(subiso_5cycles_SOURCES) \
	$(subiso_triangles_SOURCES) $(switch_endianness_SOURCES) \
	$(test_adjacency_iteration_SOURCES) $(test_badrank_SOURCES) \
	$(test_breadth_first_search_SOURCES) \
	$(test_connected_components_SOURCES) $(test_duplicate_SOURCES) \
	$(test_dynamic_array_SOURCES) $(test_edmonds_karp_SOURCES) \
	$(test_edmonds_karp_small_SOURCES) \
	$(test_expand_one_edge_SOURCES) $(test_filtering_SOURCES) \
	$(test_graph_SOURCES) $(test_graph_parallel_SOURCES) \
	$(test_hachar_SOURCES) $(test_independent_set_SOURCES) \
	$(test_mmap_SOURCES) $(test_mtgl_strtok_SOURCES) \
	$(test_mutable_graph_SOURCES) $(test_numeric_SOURCES) \
	$(test_pagerank_SOURCES) $(test_partitioning_schemes_SOURCES) \
	$(test_persist_xht_SOURCES) $(test_property_map_SOURCES) \
	$(test_pseudo_diameter_SOURCES) $(test_random_SOURCES) \
	$(test_read_graph_SOURCES) $(test_shared_ptr_SOURCES) \
	$(test_sort_SOURCES) $(test_sssp_deltastepping_SOURCES) \
	$(test_subgraph_SOURCES) $(test_subgraph_isomorphism_SOURCES) \
	$(test_triangles_SOURCES) $(test_vertex_betweenness_SOURCES) \
	$(test_wcnm_SOURCES) $(test_write_graph_SOURCES) \
	$(test_xmt_hash_set_SOURCES) $(test_xmt_hash_table_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/rmccoll/projects/graphdb-testing/lib/mtgl-1.1.1/config/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AUTOCONF = ${SHELL} /home/rmccoll/projects/graphdb-testing/lib/mtgl-1.1.1/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/rmccoll/projects/graphdb-testing/lib/mtgl-1.1.1/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/rmccoll/projects/graphdb-testing/lib/mtgl-1.1.1/config/missing --run automake-1.11
AWK = gawk
CC = cc
CCDEPMODE = depmode=gcc3
CFLAGS = -O2 -fopenmp
CPP = cc -E
CPPFLAGS = -I$(top_srcdir) 
CXX = c++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O2 -fopenmp
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm  -lrt
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/rmccoll/projects/graphdb-testing/lib/mtgl-1.1.1/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
OPENMP_CFLAGS = -fopenmp
PACKAGE = mtgl
PACKAGE_BUGREPORT = gemacke@sandia.gov
PACKAGE_NAME = mtgl
PACKAGE_STRING = mtgl 1.1.1
PACKAGE_TARNAME = mtgl
PACKAGE_URL = https://software.sandia.gov/trac/mtgl/wiki
PACKAGE_VERSION = 1.1.1
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.1.1
abs_builddir = /home/rmccoll/projects/graphdb-testing/lib/mtgl-1.1.1/test
abs_srcdir = /home/rmccoll/projects/graphdb-testing/lib/mtgl-1.1.1/test
abs_top_builddir = /home/rmccoll/projects/graphdb-testing/lib/mtgl-1.1.1
abs_top_srcdir = /home/rmccoll/projects/graphdb-testing/lib/mtgl-1.1.1
ac_ct_CC = cc
ac_ct_CXX = c++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/rmccoll/projects/graphdb-testing/lib/mtgl-1.1.1/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/rmccoll/projects/graphdb-testing/lib/mtgl/build
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
TVFLAGS = 

# traceview flags (see ../configure.in)
#TVFLAGS = -trace -trace_level 0 -profile
CCFLAG_ARRAYBOUNDS = 
#CCFLAG_ARRAYBOUNDS = -DCHECK_BOUNDS

# Add these back in later when the test script is written.
#TESTS = $(noinst_PROGRAMS)
#XFAIL_TESTS = $(noinst_PROGRAMS)

# For check_PROGRAMS.
test_badrank_SOURCES = test_badrank.cpp
#test_badrank_CFLAGS = -pl test_badrank.pl
#test_badrank_CXXFLAGS = -pl test_badrank.pl
test_breadth_first_search_SOURCES = test_breadth_first_search.cpp
#test_breadth_first_search_CFLAGS = -pl test_breadth_first_search.pl
#test_breadth_first_search_CXXFLAGS = -pl test_breadth_first_search.pl
test_connected_components_SOURCES = test_connected_components.cpp
#test_connected_components_CFLAGS = -pl test_connected_components.pl
#test_connected_components_CXXFLAGS = -pl test_connected_components.pl
test_expand_one_edge_SOURCES = test_expand_one_edge.cpp
#test_expand_one_edge_CFLAGS = -pl test_expand_one_edge.pl
#test_expand_one_edge_CXXFLAGS = -pl test_expand_one_edge.pl
test_independent_set_SOURCES = test_independent_set.cpp
#test_independent_set_CFLAGS = -pl test_independent_set.pl
#test_independent_set_CXXFLAGS = -pl test_independent_set.pl
test_pagerank_SOURCES = test_pagerank.cpp
#test_pagerank_CFLAGS = -pl test_pagerank.pl
#test_pagerank_CXXFLAGS = -pl test_pagerank.pl
test_pseudo_diameter_SOURCES = test_pseudo_diameter.cpp
#test_pseudo_diameter_CFLAGS = -pl test_pseudo_diameter.pl
#test_pseudo_diameter_CXXFLAGS = -pl test_pseudo_diameter.pl
test_triangles_SOURCES = test_triangles.cpp
#test_triangles_CFLAGS = -pl test_triangles.pl
#test_triangles_CXXFLAGS = -pl test_triangles.pl
test_wcnm_SOURCES = test_wcnm.cpp ufl.cpp VolVolume.cpp
#test_wcnm_CFLAGS = -pl test_wcnm.pl
#test_wcnm_CXXFLAGS = -pl test_wcnm.pl
custom2file_SOURCES = custom2file.cpp
#custom2file_CFLAGS = -pl custom2file.pl
#custom2file_CXXFLAGS = -pl custom2file.pl
graph2file_SOURCES = graph2file.cpp
#graph2file_CFLAGS = -pl graph2file.pl
#graph2file_CXXFLAGS = -pl graph2file.pl
persist_graph_SOURCES = persist_graph.cpp
#persist_graph_CFLAGS = -pl persist_graph.pl
#persist_graph_CXXFLAGS = -pl persist_graph.pl

# For EXTRA_PROGRAMS.
generate_euler_tour_SOURCES = generate_euler_tour.cpp
#generate_euler_tour_CFLAGS = -pl generate_euler_tour.pl
#generate_euler_tour_CXXFLAGS = -pl generate_euler_tour.pl
rmat2file_SOURCES = rmat2file.cpp
#rmat2file_CFLAGS = -pl rmat2file.pl
#rmat2file_CXXFLAGS = -pl rmat2file.pl
subiso_5cycles_SOURCES = subiso_5cycles.cpp
#subiso_5cycles_CFLAGS = -pl subiso_5cycles.pl
#subiso_5cycles_CXXFLAGS = -pl subiso_5cycles.pl
subiso_triangles_SOURCES = subiso_triangles.cpp
#subiso_triangles_CFLAGS = -pl subiso_triangles.pl
#subiso_triangles_CXXFLAGS = -pl subiso_triangles.pl
switch_endianness_SOURCES = switch_endianness.cpp
#switch_endianness_CFLAGS = -pl switch_endianness.pl
#switch_endianness_CXXFLAGS = -pl switch_endianness.pl
test_adjacency_iteration_SOURCES = test_adjacency_iteration.cpp
#test_adjacency_iteration_CFLAGS = -pl test_adjacency_iteration.pl
#test_adjacency_iteration_CXXFLAGS = -pl test_adjacency_iteration.pl
test_duplicate_SOURCES = test_duplicate.cpp
#test_duplicate_CFLAGS = -pl test_duplicate.pl
#test_duplicate_CXXFLAGS = -pl test_duplicate.pl
test_dynamic_array_SOURCES = test_dynamic_array.cpp
#test_dynamic_array_CFLAGS = -pl test_dynamic_array.pl
#test_dynamic_array_CXXFLAGS = -pl test_dynamic_array.pl
test_edmonds_karp_SOURCES = test_edmonds_karp.cpp
#test_edmonds_karp_CFLAGS = -pl test_edmonds_karp.pl
#test_edmonds_karp_CXXFLAGS = -pl test_edmonds_karp.pl
test_edmonds_karp_small_SOURCES = test_edmonds_karp_small.cpp
#test_edmonds_karp_small_CFLAGS = -pl test_edmonds_karp_small.pl
#test_edmonds_karp_small_CXXFLAGS = -pl test_edmonds_karp_small.pl
test_filtering_SOURCES = test_filtering.cpp
#test_filtering_CFLAGS = -pl test_filtering.pl
#test_filtering_CXXFLAGS = -pl test_filtering.pl
test_graph_SOURCES = test_graph.cpp
#test_graph_CFLAGS = -pl test_graph.pl
#test_graph_CXXFLAGS = -pl test_graph.pl
test_graph_parallel_SOURCES = test_graph_parallel.cpp
#test_graph_parallel_CFLAGS = -pl test_graph_parallel.pl
#test_graph_parallel_CXXFLAGS = -pl test_graph_parallel.pl
test_hachar_SOURCES = test_hachar.cpp
#test_hachar_CFLAGS = -pl test_hachar.pl
#test_hachar_CXXFLAGS = -pl test_hachar.pl
test_mmap_SOURCES = test_mmap.cpp
#test_mmap_CFLAGS = -pl test_mmap.pl
#test_mmap_CXXFLAGS = -pl test_mmap.pl
test_mtgl_strtok_SOURCES = test_mtgl_strtok.cpp
#test_mtgl_strtok_CFLAGS = -pl test_mtgl_strtok.pl
#test_mtgl_strtok_CXXFLAGS = -pl test_mtgl_strtok.pl
test_mutable_graph_SOURCES = test_mutable_graph.cpp
#test_mutable_graph_CFLAGS = -pl test_mutable_graph.pl
#test_mutable_graph_CXXFLAGS = -pl test_mutable_graph.pl
test_numeric_SOURCES = test_numeric.cpp
#test_numeric_CFLAGS = -pl test_numeric.pl
#test_numeric_CXXFLAGS = -pl test_numeric.pl
test_partitioning_schemes_SOURCES = test_partitioning_schemes.cpp
#test_partitioning_schemes_CFLAGS = -pl test_partitioning_schemes.pl
#test_partitioning_schemes_CXXFLAGS = -pl test_partitioning_schemes.pl
test_persist_xht_SOURCES = test_persist_xht.cpp
#test_persist_xht_CFLAGS = -pl test_persist_xht.pl
#test_persist_xht_CXXFLAGS = -pl test_persist_xht.pl
test_property_map_SOURCES = test_property_map.cpp
#test_property_map_CFLAGS = -pl test_property_map.pl
#test_property_map_CXXFLAGS = -pl test_property_map.pl
test_random_SOURCES = test_random.cpp
#test_random_CFLAGS = -pl test_random.pl
#test_random_CXXFLAGS = -pl test_random.pl
test_read_graph_SOURCES = test_read_graph.cpp
#test_read_graph_CFLAGS = -pl test_read_graph.pl
#test_read_graph_CXXFLAGS = -pl test_read_graph.pl
test_shared_ptr_SOURCES = test_shared_ptr.cpp
#test_shared_ptr_CFLAGS = -pl test_shared_ptr.pl
#test_shared_ptr_CXXFLAGS = -pl test_shared_ptr.pl
test_sort_SOURCES = test_sort.cpp
#test_sort_CFLAGS = -pl test_sort.pl
#test_sort_CXXFLAGS = -pl test_sort.pl
test_sssp_deltastepping_SOURCES = test_sssp_deltastepping.cpp
#test_sssp_deltastepping_CFLAGS = -pl test_sssp_deltastepping.pl
#test_sssp_deltastepping_CXXFLAGS = -pl test_sssp_deltastepping.pl
test_subgraph_SOURCES = test_subgraph.cpp
#test_subgraph_CFLAGS = -pl test_subgraph.pl
#test_subgraph_CXXFLAGS = -pl test_subgraph.pl
test_subgraph_isomorphism_SOURCES = test_subgraph_isomorphism.cpp
#test_subgraph_isomorphism_CFLAGS = -pl test_subgraph_isomorphism.pl
#test_subgraph_isomorphism_CXXFLAGS = -pl test_subgraph_isomorphism.pl
test_vertex_betweenness_SOURCES = test_vertex_betweenness.cpp
#test_vertex_betweenness_CFLAGS = -pl test_vertex_betweenness.pl
#test_vertex_betweenness_CXXFLAGS = -pl test_vertex_betweenness.pl
test_write_graph_SOURCES = test_write_graph.cpp
#test_write_graph_CFLAGS = -pl test_write_graph.pl
#test_write_graph_CXXFLAGS = -pl test_write_graph.pl
test_xmt_hash_set_SOURCES = test_xmt_hash_set.cpp
#test_xmt_hash_set_CFLAGS = -pl test_xmt_hash_set.pl
#test_xmt_hash_set_CXXFLAGS = -pl test_xmt_hash_set.pl
test_xmt_hash_table_SOURCES = test_xmt_hash_table.cpp
#test_xmt_hash_table_CFLAGS = -pl test_xmt_hash_table.pl
#test_xmt_hash_table_CXXFLAGS = -pl test_xmt_hash_table.pl
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
custom2file$(EXEEXT): $(custom2file_OBJECTS) $(custom2file_DEPENDENCIES) $(EXTRA_custom2file_DEPENDENCIES) 
	@rm -f custom2file$(EXEEXT)
	$(AM_V_CXXLD)$(custom2file_LINK) $(custom2file_OBJECTS) $(custom2file_LDADD) $(LIBS)
generate_euler_tour$(EXEEXT): $(generate_euler_tour_OBJECTS) $(generate_euler_tour_DEPENDENCIES) $(EXTRA_generate_euler_tour_DEPENDENCIES) 
	@rm -f generate_euler_tour$(EXEEXT)
	$(AM_V_CXXLD)$(generate_euler_tour_LINK) $(generate_euler_tour_OBJECTS) $(generate_euler_tour_LDADD) $(LIBS)
graph2file$(EXEEXT): $(graph2file_OBJECTS) $(graph2file_DEPENDENCIES) $(EXTRA_graph2file_DEPENDENCIES) 
	@rm -f graph2file$(EXEEXT)
	$(AM_V_CXXLD)$(graph2file_LINK) $(graph2file_OBJECTS) $(graph2file_LDADD) $(LIBS)
persist_graph$(EXEEXT): $(persist_graph_OBJECTS) $(persist_graph_DEPENDENCIES) $(EXTRA_persist_graph_DEPENDENCIES) 
	@rm -f persist_graph$(EXEEXT)
	$(AM_V_CXXLD)$(persist_graph_LINK) $(persist_graph_OBJECTS) $(persist_graph_LDADD) $(LIBS)
rmat2file$(EXEEXT): $(rmat2file_OBJECTS) $(rmat2file_DEPENDENCIES) $(EXTRA_rmat2file_DEPENDENCIES) 
	@rm -f rmat2file$(EXEEXT)
	$(AM_V_CXXLD)$(rmat2file_LINK) $(rmat2file_OBJECTS) $(rmat2file_LDADD) $(LIBS)
subiso_5cycles$(EXEEXT): $(subiso_5cycles_OBJECTS) $(subiso_5cycles_DEPENDENCIES) $(EXTRA_subiso_5cycles_DEPENDENCIES) 
	@rm -f subiso_5cycles$(EXEEXT)
	$(AM_V_CXXLD)$(subiso_5cycles_LINK) $(subiso_5cycles_OBJECTS) $(subiso_5cycles_LDADD) $(LIBS)
subiso_triangles$(EXEEXT): $(subiso_triangles_OBJECTS) $(subiso_triangles_DEPENDENCIES) $(EXTRA_subiso_triangles_DEPENDENCIES) 
	@rm -f subiso_triangles$(EXEEXT)
	$(AM_V_CXXLD)$(subiso_triangles_LINK) $(subiso_triangles_OBJECTS) $(subiso_triangles_LDADD) $(LIBS)
switch_endianness$(EXEEXT): $(switch_endianness_OBJECTS) $(switch_endianness_DEPENDENCIES) $(EXTRA_switch_endianness_DEPENDENCIES) 
	@rm -f switch_endianness$(EXEEXT)
	$(AM_V_CXXLD)$(switch_endianness_LINK) $(switch_endianness_OBJECTS) $(switch_endianness_LDADD) $(LIBS)
test_adjacency_iteration$(EXEEXT): $(test_adjacency_iteration_OBJECTS) $(test_adjacency_iteration_DEPENDENCIES) $(EXTRA_test_adjacency_iteration_DEPENDENCIES) 
	@rm -f test_adjacency_iteration$(EXEEXT)
	$(AM_V_CXXLD)$(test_adjacency_iteration_LINK) $(test_adjacency_iteration_OBJECTS) $(test_adjacency_iteration_LDADD) $(LIBS)
test_badrank$(EXEEXT): $(test_badrank_OBJECTS) $(test_badrank_DEPENDENCIES) $(EXTRA_test_badrank_DEPENDENCIES) 
	@rm -f test_badrank$(EXEEXT)
	$(AM_V_CXXLD)$(test_badrank_LINK) $(test_badrank_OBJECTS) $(test_badrank_LDADD) $(LIBS)
test_breadth_first_search$(EXEEXT): $(test_breadth_first_search_OBJECTS) $(test_breadth_first_search_DEPENDENCIES) $(EXTRA_test_breadth_first_search_DEPENDENCIES) 
	@rm -f test_breadth_first_search$(EXEEXT)
	$(AM_V_CXXLD)$(test_breadth_first_search_LINK) $(test_breadth_first_search_OBJECTS) $(test_breadth_first_search_LDADD) $(LIBS)
test_connected_components$(EXEEXT): $(test_connected_components_OBJECTS) $(test_connected_components_DEPENDENCIES) $(EXTRA_test_connected_components_DEPENDENCIES) 
	@rm -f test_connected_components$(EXEEXT)
	$(AM_V_CXXLD)$(test_connected_components_LINK) $(test_connected_components_OBJECTS) $(test_connected_components_LDADD) $(LIBS)
test_duplicate$(EXEEXT): $(test_duplicate_OBJECTS) $(test_duplicate_DEPENDENCIES) $(EXTRA_test_duplicate_DEPENDENCIES) 
	@rm -f test_duplicate$(EXEEXT)
	$(AM_V_CXXLD)$(test_duplicate_LINK) $(test_duplicate_OBJECTS) $(test_duplicate_LDADD) $(LIBS)
test_dynamic_array$(EXEEXT): $(test_dynamic_array_OBJECTS) $(test_dynamic_array_DEPENDENCIES) $(EXTRA_test_dynamic_array_DEPENDENCIES) 
	@rm -f test_dynamic_array$(EXEEXT)
	$(AM_V_CXXLD)$(test_dynamic_array_LINK) $(test_dynamic_array_OBJECTS) $(test_dynamic_array_LDADD) $(LIBS)
test_edmonds_karp$(EXEEXT): $(test_edmonds_karp_OBJECTS) $(test_edmonds_karp_DEPENDENCIES) $(EXTRA_test_edmonds_karp_DEPENDENCIES) 
	@rm -f test_edmonds_karp$(EXEEXT)
	$(AM_V_CXXLD)$(test_edmonds_karp_LINK) $(test_edmonds_karp_OBJECTS) $(test_edmonds_karp_LDADD) $(LIBS)
test_edmonds_karp_small$(EXEEXT): $(test_edmonds_karp_small_OBJECTS) $(test_edmonds_karp_small_DEPENDENCIES) $(EXTRA_test_edmonds_karp_small_DEPENDENCIES) 
	@rm -f test_edmonds_karp_small$(EXEEXT)
	$(AM_V_CXXLD)$(test_edmonds_karp_small_LINK) $(test_edmonds_karp_small_OBJECTS) $(test_edmonds_karp_small_LDADD) $(LIBS)
test_expand_one_edge$(EXEEXT): $(test_expand_one_edge_OBJECTS) $(test_expand_one_edge_DEPENDENCIES) $(EXTRA_test_expand_one_edge_DEPENDENCIES) 
	@rm -f test_expand_one_edge$(EXEEXT)
	$(AM_V_CXXLD)$(test_expand_one_edge_LINK) $(test_expand_one_edge_OBJECTS) $(test_expand_one_edge_LDADD) $(LIBS)
test_filtering$(EXEEXT): $(test_filtering_OBJECTS) $(test_filtering_DEPENDENCIES) $(EXTRA_test_filtering_DEPENDENCIES) 
	@rm -f test_filtering$(EXEEXT)
	$(AM_V_CXXLD)$(test_filtering_LINK) $(test_filtering_OBJECTS) $(test_filtering_LDADD) $(LIBS)
test_graph$(EXEEXT): $(test_graph_OBJECTS) $(test_graph_DEPENDENCIES) $(EXTRA_test_graph_DEPENDENCIES) 
	@rm -f test_graph$(EXEEXT)
	$(AM_V_CXXLD)$(test_graph_LINK) $(test_graph_OBJECTS) $(test_graph_LDADD) $(LIBS)
test_graph_parallel$(EXEEXT): $(test_graph_parallel_OBJECTS) $(test_graph_parallel_DEPENDENCIES) $(EXTRA_test_graph_parallel_DEPENDENCIES) 
	@rm -f test_graph_parallel$(EXEEXT)
	$(AM_V_CXXLD)$(test_graph_parallel_LINK) $(test_graph_parallel_OBJECTS) $(test_graph_parallel_LDADD) $(LIBS)
test_hachar$(EXEEXT): $(test_hachar_OBJECTS) $(test_hachar_DEPENDENCIES) $(EXTRA_test_hachar_DEPENDENCIES) 
	@rm -f test_hachar$(EXEEXT)
	$(AM_V_CXXLD)$(test_hachar_LINK) $(test_hachar_OBJECTS) $(test_hachar_LDADD) $(LIBS)
test_independent_set$(EXEEXT): $(test_independent_set_OBJECTS) $(test_independent_set_DEPENDENCIES) $(EXTRA_test_independent_set_DEPENDENCIES) 
	@rm -f test_independent_set$(EXEEXT)
	$(AM_V_CXXLD)$(test_independent_set_LINK) $(test_independent_set_OBJECTS) $(test_independent_set_LDADD) $(LIBS)
test_mmap$(EXEEXT): $(test_mmap_OBJECTS) $(test_mmap_DEPENDENCIES) $(EXTRA_test_mmap_DEPENDENCIES) 
	@rm -f test_mmap$(EXEEXT)
	$(AM_V_CXXLD)$(test_mmap_LINK) $(test_mmap_OBJECTS) $(test_mmap_LDADD) $(LIBS)
test_mtgl_strtok$(EXEEXT): $(test_mtgl_strtok_OBJECTS) $(test_mtgl_strtok_DEPENDENCIES) $(EXTRA_test_mtgl_strtok_DEPENDENCIES) 
	@rm -f test_mtgl_strtok$(EXEEXT)
	$(AM_V_CXXLD)$(test_mtgl_strtok_LINK) $(test_mtgl_strtok_OBJECTS) $(test_mtgl_strtok_LDADD) $(LIBS)
test_mutable_graph$(EXEEXT): $(test_mutable_graph_OBJECTS) $(test_mutable_graph_DEPENDENCIES) $(EXTRA_test_mutable_graph_DEPENDENCIES) 
	@rm -f test_mutable_graph$(EXEEXT)
	$(AM_V_CXXLD)$(test_mutable_graph_LINK) $(test_mutable_graph_OBJECTS) $(test_mutable_graph_LDADD) $(LIBS)
test_numeric$(EXEEXT): $(test_numeric_OBJECTS) $(test_numeric_DEPENDENCIES) $(EXTRA_test_numeric_DEPENDENCIES) 
	@rm -f test_numeric$(EXEEXT)
	$(AM_V_CXXLD)$(test_numeric_LINK) $(test_numeric_OBJECTS) $(test_numeric_LDADD) $(LIBS)
test_pagerank$(EXEEXT): $(test_pagerank_OBJECTS) $(test_pagerank_DEPENDENCIES) $(EXTRA_test_pagerank_DEPENDENCIES) 
	@rm -f test_pagerank$(EXEEXT)
	$(AM_V_CXXLD)$(test_pagerank_LINK) $(test_pagerank_OBJECTS) $(test_pagerank_LDADD) $(LIBS)
test_partitioning_schemes$(EXEEXT): $(test_partitioning_schemes_OBJECTS) $(test_partitioning_schemes_DEPENDENCIES) $(EXTRA_test_partitioning_schemes_DEPENDENCIES) 
	@rm -f test_partitioning_schemes$(EXEEXT)
	$(AM_V_CXXLD)$(test_partitioning_schemes_LINK) $(test_partitioning_schemes_OBJECTS) $(test_partitioning_schemes_LDADD) $(LIBS)
test_persist_xht$(EXEEXT): $(test_persist_xht_OBJECTS) $(test_persist_xht_DEPENDENCIES) $(EXTRA_test_persist_xht_DEPENDENCIES) 
	@rm -f test_persist_xht$(EXEEXT)
	$(AM_V_CXXLD)$(test_persist_xht_LINK) $(test_persist_xht_OBJECTS) $(test_persist_xht_LDADD) $(LIBS)
test_property_map$(EXEEXT): $(test_property_map_OBJECTS) $(test_property_map_DEPENDENCIES) $(EXTRA_test_property_map_DEPENDENCIES) 
	@rm -f test_property_map$(EXEEXT)
	$(AM_V_CXXLD)$(test_property_map_LINK) $(test_property_map_OBJECTS) $(test_property_map_LDADD) $(LIBS)
test_pseudo_diameter$(EXEEXT): $(test_pseudo_diameter_OBJECTS) $(test_pseudo_diameter_DEPENDENCIES) $(EXTRA_test_pseudo_diameter_DEPENDENCIES) 
	@rm -f test_pseudo_diameter$(EXEEXT)
	$(AM_V_CXXLD)$(test_pseudo_diameter_LINK) $(test_pseudo_diameter_OBJECTS) $(test_pseudo_diameter_LDADD) $(LIBS)
test_random$(EXEEXT): $(test_random_OBJECTS) $(test_random_DEPENDENCIES) $(EXTRA_test_random_DEPENDENCIES) 
	@rm -f test_random$(EXEEXT)
	$(AM_V_CXXLD)$(test_random_LINK) $(test_random_OBJECTS) $(test_random_LDADD) $(LIBS)
test_read_graph$(EXEEXT): $(test_read_graph_OBJECTS) $(test_read_graph_DEPENDENCIES) $(EXTRA_test_read_graph_DEPENDENCIES) 
	@rm -f test_read_graph$(EXEEXT)
	$(AM_V_CXXLD)$(test_read_graph_LINK) $(test_read_graph_OBJECTS) $(test_read_graph_LDADD) $(LIBS)
test_shared_ptr$(EXEEXT): $(test_shared_ptr_OBJECTS) $(test_shared_ptr_DEPENDENCIES) $(EXTRA_test_shared_ptr_DEPENDENCIES) 
	@rm -f test_shared_ptr$(EXEEXT)
	$(AM_V_CXXLD)$(test_shared_ptr_LINK) $(test_shared_ptr_OBJECTS) $(test_shared_ptr_LDADD) $(LIBS)
test_sort$(EXEEXT): $(test_sort_OBJECTS) $(test_sort_DEPENDENCIES) $(EXTRA_test_sort_DEPENDENCIES) 
	@rm -f test_sort$(EXEEXT)
	$(AM_V_CXXLD)$(test_sort_LINK) $(test_sort_OBJECTS) $(test_sort_LDADD) $(LIBS)
test_sssp_deltastepping$(EXEEXT): $(test_sssp_deltastepping_OBJECTS) $(test_sssp_deltastepping_DEPENDENCIES) $(EXTRA_test_sssp_deltastepping_DEPENDENCIES) 
	@rm -f test_sssp_deltastepping$(EXEEXT)
	$(AM_V_CXXLD)$(test_sssp_deltastepping_LINK) $(test_sssp_deltastepping_OBJECTS) $(test_sssp_deltastepping_LDADD) $(LIBS)
test_subgraph$(EXEEXT): $(test_subgraph_OBJECTS) $(test_subgraph_DEPENDENCIES) $(EXTRA_test_subgraph_DEPENDENCIES) 
	@rm -f test_subgraph$(EXEEXT)
	$(AM_V_CXXLD)$(test_subgraph_LINK) $(test_subgraph_OBJECTS) $(test_subgraph_LDADD) $(LIBS)
test_subgraph_isomorphism$(EXEEXT): $(test_subgraph_isomorphism_OBJECTS) $(test_subgraph_isomorphism_DEPENDENCIES) $(EXTRA_test_subgraph_isomorphism_DEPENDENCIES) 
	@rm -f test_subgraph_isomorphism$(EXEEXT)
	$(AM_V_CXXLD)$(test_subgraph_isomorphism_LINK) $(test_subgraph_isomorphism_OBJECTS) $(test_subgraph_isomorphism_LDADD) $(LIBS)
test_triangles$(EXEEXT): $(test_triangles_OBJECTS) $(test_triangles_DEPENDENCIES) $(EXTRA_test_triangles_DEPENDENCIES) 
	@rm -f test_triangles$(EXEEXT)
	$(AM_V_CXXLD)$(test_triangles_LINK) $(test_triangles_OBJECTS) $(test_triangles_LDADD) $(LIBS)
test_vertex_betweenness$(EXEEXT): $(test_vertex_betweenness_OBJECTS) $(test_vertex_betweenness_DEPENDENCIES) $(EXTRA_test_vertex_betweenness_DEPENDENCIES) 
	@rm -f test_vertex_betweenness$(EXEEXT)
	$(AM_V_CXXLD)$(test_vertex_betweenness_LINK) $(test_vertex_betweenness_OBJECTS) $(test_vertex_betweenness_LDADD) $(LIBS)
test_wcnm$(EXEEXT): $(test_wcnm_OBJECTS) $(test_wcnm_DEPENDENCIES) $(EXTRA_test_wcnm_DEPENDENCIES) 
	@rm -f test_wcnm$(EXEEXT)
	$(AM_V_CXXLD)$(test_wcnm_LINK) $(test_wcnm_OBJECTS) $(test_wcnm_LDADD) $(LIBS)
test_write_graph$(EXEEXT): $(test_write_graph_OBJECTS) $(test_write_graph_DEPENDENCIES) $(EXTRA_test_write_graph_DEPENDENCIES) 
	@rm -f test_write_graph$(EXEEXT)
	$(AM_V_CXXLD)$(test_write_graph_LINK) $(test_write_graph_OBJECTS) $(test_write_graph_LDADD) $(LIBS)
test_xmt_hash_set$(EXEEXT): $(test_xmt_hash_set_OBJECTS) $(test_xmt_hash_set_DEPENDENCIES) $(EXTRA_test_xmt_hash_set_DEPENDENCIES) 
	@rm -f test_xmt_hash_set$(EXEEXT)
	$(AM_V_CXXLD)$(test_xmt_hash_set_LINK) $(test_xmt_hash_set_OBJECTS) $(test_xmt_hash_set_LDADD) $(LIBS)
test_xmt_hash_table$(EXEEXT): $(test_xmt_hash_table_OBJECTS) $(test_xmt_hash_table_DEPENDENCIES) $(EXTRA_test_xmt_hash_table_DEPENDENCIES) 
	@rm -f test_xmt_hash_table$(EXEEXT)
	$(AM_V_CXXLD)$(test_xmt_hash_table_LINK) $(test_xmt_hash_table_OBJECTS) $(test_xmt_hash_table_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/custom2file-custom2file.Po
include ./$(DEPDIR)/generate_euler_tour-generate_euler_tour.Po
include ./$(DEPDIR)/graph2file-graph2file.Po
include ./$(DEPDIR)/persist_graph-persist_graph.Po
include ./$(DEPDIR)/rmat2file-rmat2file.Po
include ./$(DEPDIR)/subiso_5cycles-subiso_5cycles.Po
include ./$(DEPDIR)/subiso_triangles-subiso_triangles.Po
include ./$(DEPDIR)/switch_endianness-switch_endianness.Po
include ./$(DEPDIR)/test_adjacency_iteration-test_adjacency_iteration.Po
include ./$(DEPDIR)/test_badrank-test_badrank.Po
include ./$(DEPDIR)/test_breadth_first_search-test_breadth_first_search.Po
include ./$(DEPDIR)/test_connected_components-test_connected_components.Po
include ./$(DEPDIR)/test_duplicate-test_duplicate.Po
include ./$(DEPDIR)/test_dynamic_array-test_dynamic_array.Po
include ./$(DEPDIR)/test_edmonds_karp-test_edmonds_karp.Po
include ./$(DEPDIR)/test_edmonds_karp_small-test_edmonds_karp_small.Po
include ./$(DEPDIR)/test_expand_one_edge-test_expand_one_edge.Po
include ./$(DEPDIR)/test_filtering-test_filtering.Po
include ./$(DEPDIR)/test_graph-test_graph.Po
include ./$(DEPDIR)/test_graph_parallel-test_graph_parallel.Po
include ./$(DEPDIR)/test_hachar-test_hachar.Po
include ./$(DEPDIR)/test_independent_set-test_independent_set.Po
include ./$(DEPDIR)/test_mmap-test_mmap.Po
include ./$(DEPDIR)/test_mtgl_strtok-test_mtgl_strtok.Po
include ./$(DEPDIR)/test_mutable_graph-test_mutable_graph.Po
include ./$(DEPDIR)/test_numeric-test_numeric.Po
include ./$(DEPDIR)/test_pagerank-test_pagerank.Po
include ./$(DEPDIR)/test_partitioning_schemes-test_partitioning_schemes.Po
include ./$(DEPDIR)/test_persist_xht-test_persist_xht.Po
include ./$(DEPDIR)/test_property_map-test_property_map.Po
include ./$(DEPDIR)/test_pseudo_diameter-test_pseudo_diameter.Po
include ./$(DEPDIR)/test_random-test_random.Po
include ./$(DEPDIR)/test_read_graph-test_read_graph.Po
include ./$(DEPDIR)/test_shared_ptr-test_shared_ptr.Po
include ./$(DEPDIR)/test_sort-test_sort.Po
include ./$(DEPDIR)/test_sssp_deltastepping-test_sssp_deltastepping.Po
include ./$(DEPDIR)/test_subgraph-test_subgraph.Po
include ./$(DEPDIR)/test_subgraph_isomorphism-test_subgraph_isomorphism.Po
include ./$(DEPDIR)/test_triangles-test_triangles.Po
include ./$(DEPDIR)/test_vertex_betweenness-test_vertex_betweenness.Po
include ./$(DEPDIR)/test_wcnm-VolVolume.Po
include ./$(DEPDIR)/test_wcnm-test_wcnm.Po
include ./$(DEPDIR)/test_wcnm-ufl.Po
include ./$(DEPDIR)/test_write_graph-test_write_graph.Po
include ./$(DEPDIR)/test_xmt_hash_set-test_xmt_hash_set.Po
include ./$(DEPDIR)/test_xmt_hash_table-test_xmt_hash_table.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

custom2file-custom2file.o: custom2file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(custom2file_CXXFLAGS) $(CXXFLAGS) -MT custom2file-custom2file.o -MD -MP -MF $(DEPDIR)/custom2file-custom2file.Tpo -c -o custom2file-custom2file.o `test -f 'custom2file.cpp' || echo '$(srcdir)/'`custom2file.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/custom2file-custom2file.Tpo $(DEPDIR)/custom2file-custom2file.Po
#	$(AM_V_CXX)source='custom2file.cpp' object='custom2file-custom2file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(custom2file_CXXFLAGS) $(CXXFLAGS) -c -o custom2file-custom2file.o `test -f 'custom2file.cpp' || echo '$(srcdir)/'`custom2file.cpp

custom2file-custom2file.obj: custom2file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(custom2file_CXXFLAGS) $(CXXFLAGS) -MT custom2file-custom2file.obj -MD -MP -MF $(DEPDIR)/custom2file-custom2file.Tpo -c -o custom2file-custom2file.obj `if test -f 'custom2file.cpp'; then $(CYGPATH_W) 'custom2file.cpp'; else $(CYGPATH_W) '$(srcdir)/custom2file.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/custom2file-custom2file.Tpo $(DEPDIR)/custom2file-custom2file.Po
#	$(AM_V_CXX)source='custom2file.cpp' object='custom2file-custom2file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(custom2file_CXXFLAGS) $(CXXFLAGS) -c -o custom2file-custom2file.obj `if test -f 'custom2file.cpp'; then $(CYGPATH_W) 'custom2file.cpp'; else $(CYGPATH_W) '$(srcdir)/custom2file.cpp'; fi`

generate_euler_tour-generate_euler_tour.o: generate_euler_tour.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_euler_tour_CXXFLAGS) $(CXXFLAGS) -MT generate_euler_tour-generate_euler_tour.o -MD -MP -MF $(DEPDIR)/generate_euler_tour-generate_euler_tour.Tpo -c -o generate_euler_tour-generate_euler_tour.o `test -f 'generate_euler_tour.cpp' || echo '$(srcdir)/'`generate_euler_tour.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/generate_euler_tour-generate_euler_tour.Tpo $(DEPDIR)/generate_euler_tour-generate_euler_tour.Po
#	$(AM_V_CXX)source='generate_euler_tour.cpp' object='generate_euler_tour-generate_euler_tour.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_euler_tour_CXXFLAGS) $(CXXFLAGS) -c -o generate_euler_tour-generate_euler_tour.o `test -f 'generate_euler_tour.cpp' || echo '$(srcdir)/'`generate_euler_tour.cpp

generate_euler_tour-generate_euler_tour.obj: generate_euler_tour.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_euler_tour_CXXFLAGS) $(CXXFLAGS) -MT generate_euler_tour-generate_euler_tour.obj -MD -MP -MF $(DEPDIR)/generate_euler_tour-generate_euler_tour.Tpo -c -o generate_euler_tour-generate_euler_tour.obj `if test -f 'generate_euler_tour.cpp'; then $(CYGPATH_W) 'generate_euler_tour.cpp'; else $(CYGPATH_W) '$(srcdir)/generate_euler_tour.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/generate_euler_tour-generate_euler_tour.Tpo $(DEPDIR)/generate_euler_tour-generate_euler_tour.Po
#	$(AM_V_CXX)source='generate_euler_tour.cpp' object='generate_euler_tour-generate_euler_tour.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_euler_tour_CXXFLAGS) $(CXXFLAGS) -c -o generate_euler_tour-generate_euler_tour.obj `if test -f 'generate_euler_tour.cpp'; then $(CYGPATH_W) 'generate_euler_tour.cpp'; else $(CYGPATH_W) '$(srcdir)/generate_euler_tour.cpp'; fi`

graph2file-graph2file.o: graph2file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph2file_CXXFLAGS) $(CXXFLAGS) -MT graph2file-graph2file.o -MD -MP -MF $(DEPDIR)/graph2file-graph2file.Tpo -c -o graph2file-graph2file.o `test -f 'graph2file.cpp' || echo '$(srcdir)/'`graph2file.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/graph2file-graph2file.Tpo $(DEPDIR)/graph2file-graph2file.Po
#	$(AM_V_CXX)source='graph2file.cpp' object='graph2file-graph2file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph2file_CXXFLAGS) $(CXXFLAGS) -c -o graph2file-graph2file.o `test -f 'graph2file.cpp' || echo '$(srcdir)/'`graph2file.cpp

graph2file-graph2file.obj: graph2file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph2file_CXXFLAGS) $(CXXFLAGS) -MT graph2file-graph2file.obj -MD -MP -MF $(DEPDIR)/graph2file-graph2file.Tpo -c -o graph2file-graph2file.obj `if test -f 'graph2file.cpp'; then $(CYGPATH_W) 'graph2file.cpp'; else $(CYGPATH_W) '$(srcdir)/graph2file.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/graph2file-graph2file.Tpo $(DEPDIR)/graph2file-graph2file.Po
#	$(AM_V_CXX)source='graph2file.cpp' object='graph2file-graph2file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph2file_CXXFLAGS) $(CXXFLAGS) -c -o graph2file-graph2file.obj `if test -f 'graph2file.cpp'; then $(CYGPATH_W) 'graph2file.cpp'; else $(CYGPATH_W) '$(srcdir)/graph2file.cpp'; fi`

persist_graph-persist_graph.o: persist_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(persist_graph_CXXFLAGS) $(CXXFLAGS) -MT persist_graph-persist_graph.o -MD -MP -MF $(DEPDIR)/persist_graph-persist_graph.Tpo -c -o persist_graph-persist_graph.o `test -f 'persist_graph.cpp' || echo '$(srcdir)/'`persist_graph.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/persist_graph-persist_graph.Tpo $(DEPDIR)/persist_graph-persist_graph.Po
#	$(AM_V_CXX)source='persist_graph.cpp' object='persist_graph-persist_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(persist_graph_CXXFLAGS) $(CXXFLAGS) -c -o persist_graph-persist_graph.o `test -f 'persist_graph.cpp' || echo '$(srcdir)/'`persist_graph.cpp

persist_graph-persist_graph.obj: persist_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(persist_graph_CXXFLAGS) $(CXXFLAGS) -MT persist_graph-persist_graph.obj -MD -MP -MF $(DEPDIR)/persist_graph-persist_graph.Tpo -c -o persist_graph-persist_graph.obj `if test -f 'persist_graph.cpp'; then $(CYGPATH_W) 'persist_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/persist_graph.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/persist_graph-persist_graph.Tpo $(DEPDIR)/persist_graph-persist_graph.Po
#	$(AM_V_CXX)source='persist_graph.cpp' object='persist_graph-persist_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(persist_graph_CXXFLAGS) $(CXXFLAGS) -c -o persist_graph-persist_graph.obj `if test -f 'persist_graph.cpp'; then $(CYGPATH_W) 'persist_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/persist_graph.cpp'; fi`

rmat2file-rmat2file.o: rmat2file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rmat2file_CXXFLAGS) $(CXXFLAGS) -MT rmat2file-rmat2file.o -MD -MP -MF $(DEPDIR)/rmat2file-rmat2file.Tpo -c -o rmat2file-rmat2file.o `test -f 'rmat2file.cpp' || echo '$(srcdir)/'`rmat2file.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rmat2file-rmat2file.Tpo $(DEPDIR)/rmat2file-rmat2file.Po
#	$(AM_V_CXX)source='rmat2file.cpp' object='rmat2file-rmat2file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rmat2file_CXXFLAGS) $(CXXFLAGS) -c -o rmat2file-rmat2file.o `test -f 'rmat2file.cpp' || echo '$(srcdir)/'`rmat2file.cpp

rmat2file-rmat2file.obj: rmat2file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rmat2file_CXXFLAGS) $(CXXFLAGS) -MT rmat2file-rmat2file.obj -MD -MP -MF $(DEPDIR)/rmat2file-rmat2file.Tpo -c -o rmat2file-rmat2file.obj `if test -f 'rmat2file.cpp'; then $(CYGPATH_W) 'rmat2file.cpp'; else $(CYGPATH_W) '$(srcdir)/rmat2file.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rmat2file-rmat2file.Tpo $(DEPDIR)/rmat2file-rmat2file.Po
#	$(AM_V_CXX)source='rmat2file.cpp' object='rmat2file-rmat2file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rmat2file_CXXFLAGS) $(CXXFLAGS) -c -o rmat2file-rmat2file.obj `if test -f 'rmat2file.cpp'; then $(CYGPATH_W) 'rmat2file.cpp'; else $(CYGPATH_W) '$(srcdir)/rmat2file.cpp'; fi`

subiso_5cycles-subiso_5cycles.o: subiso_5cycles.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(subiso_5cycles_CXXFLAGS) $(CXXFLAGS) -MT subiso_5cycles-subiso_5cycles.o -MD -MP -MF $(DEPDIR)/subiso_5cycles-subiso_5cycles.Tpo -c -o subiso_5cycles-subiso_5cycles.o `test -f 'subiso_5cycles.cpp' || echo '$(srcdir)/'`subiso_5cycles.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/subiso_5cycles-subiso_5cycles.Tpo $(DEPDIR)/subiso_5cycles-subiso_5cycles.Po
#	$(AM_V_CXX)source='subiso_5cycles.cpp' object='subiso_5cycles-subiso_5cycles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(subiso_5cycles_CXXFLAGS) $(CXXFLAGS) -c -o subiso_5cycles-subiso_5cycles.o `test -f 'subiso_5cycles.cpp' || echo '$(srcdir)/'`subiso_5cycles.cpp

subiso_5cycles-subiso_5cycles.obj: subiso_5cycles.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(subiso_5cycles_CXXFLAGS) $(CXXFLAGS) -MT subiso_5cycles-subiso_5cycles.obj -MD -MP -MF $(DEPDIR)/subiso_5cycles-subiso_5cycles.Tpo -c -o subiso_5cycles-subiso_5cycles.obj `if test -f 'subiso_5cycles.cpp'; then $(CYGPATH_W) 'subiso_5cycles.cpp'; else $(CYGPATH_W) '$(srcdir)/subiso_5cycles.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/subiso_5cycles-subiso_5cycles.Tpo $(DEPDIR)/subiso_5cycles-subiso_5cycles.Po
#	$(AM_V_CXX)source='subiso_5cycles.cpp' object='subiso_5cycles-subiso_5cycles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(subiso_5cycles_CXXFLAGS) $(CXXFLAGS) -c -o subiso_5cycles-subiso_5cycles.obj `if test -f 'subiso_5cycles.cpp'; then $(CYGPATH_W) 'subiso_5cycles.cpp'; else $(CYGPATH_W) '$(srcdir)/subiso_5cycles.cpp'; fi`

subiso_triangles-subiso_triangles.o: subiso_triangles.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(subiso_triangles_CXXFLAGS) $(CXXFLAGS) -MT subiso_triangles-subiso_triangles.o -MD -MP -MF $(DEPDIR)/subiso_triangles-subiso_triangles.Tpo -c -o subiso_triangles-subiso_triangles.o `test -f 'subiso_triangles.cpp' || echo '$(srcdir)/'`subiso_triangles.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/subiso_triangles-subiso_triangles.Tpo $(DEPDIR)/subiso_triangles-subiso_triangles.Po
#	$(AM_V_CXX)source='subiso_triangles.cpp' object='subiso_triangles-subiso_triangles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(subiso_triangles_CXXFLAGS) $(CXXFLAGS) -c -o subiso_triangles-subiso_triangles.o `test -f 'subiso_triangles.cpp' || echo '$(srcdir)/'`subiso_triangles.cpp

subiso_triangles-subiso_triangles.obj: subiso_triangles.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(subiso_triangles_CXXFLAGS) $(CXXFLAGS) -MT subiso_triangles-subiso_triangles.obj -MD -MP -MF $(DEPDIR)/subiso_triangles-subiso_triangles.Tpo -c -o subiso_triangles-subiso_triangles.obj `if test -f 'subiso_triangles.cpp'; then $(CYGPATH_W) 'subiso_triangles.cpp'; else $(CYGPATH_W) '$(srcdir)/subiso_triangles.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/subiso_triangles-subiso_triangles.Tpo $(DEPDIR)/subiso_triangles-subiso_triangles.Po
#	$(AM_V_CXX)source='subiso_triangles.cpp' object='subiso_triangles-subiso_triangles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(subiso_triangles_CXXFLAGS) $(CXXFLAGS) -c -o subiso_triangles-subiso_triangles.obj `if test -f 'subiso_triangles.cpp'; then $(CYGPATH_W) 'subiso_triangles.cpp'; else $(CYGPATH_W) '$(srcdir)/subiso_triangles.cpp'; fi`

switch_endianness-switch_endianness.o: switch_endianness.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(switch_endianness_CXXFLAGS) $(CXXFLAGS) -MT switch_endianness-switch_endianness.o -MD -MP -MF $(DEPDIR)/switch_endianness-switch_endianness.Tpo -c -o switch_endianness-switch_endianness.o `test -f 'switch_endianness.cpp' || echo '$(srcdir)/'`switch_endianness.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/switch_endianness-switch_endianness.Tpo $(DEPDIR)/switch_endianness-switch_endianness.Po
#	$(AM_V_CXX)source='switch_endianness.cpp' object='switch_endianness-switch_endianness.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(switch_endianness_CXXFLAGS) $(CXXFLAGS) -c -o switch_endianness-switch_endianness.o `test -f 'switch_endianness.cpp' || echo '$(srcdir)/'`switch_endianness.cpp

switch_endianness-switch_endianness.obj: switch_endianness.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(switch_endianness_CXXFLAGS) $(CXXFLAGS) -MT switch_endianness-switch_endianness.obj -MD -MP -MF $(DEPDIR)/switch_endianness-switch_endianness.Tpo -c -o switch_endianness-switch_endianness.obj `if test -f 'switch_endianness.cpp'; then $(CYGPATH_W) 'switch_endianness.cpp'; else $(CYGPATH_W) '$(srcdir)/switch_endianness.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/switch_endianness-switch_endianness.Tpo $(DEPDIR)/switch_endianness-switch_endianness.Po
#	$(AM_V_CXX)source='switch_endianness.cpp' object='switch_endianness-switch_endianness.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(switch_endianness_CXXFLAGS) $(CXXFLAGS) -c -o switch_endianness-switch_endianness.obj `if test -f 'switch_endianness.cpp'; then $(CYGPATH_W) 'switch_endianness.cpp'; else $(CYGPATH_W) '$(srcdir)/switch_endianness.cpp'; fi`

test_adjacency_iteration-test_adjacency_iteration.o: test_adjacency_iteration.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_adjacency_iteration_CXXFLAGS) $(CXXFLAGS) -MT test_adjacency_iteration-test_adjacency_iteration.o -MD -MP -MF $(DEPDIR)/test_adjacency_iteration-test_adjacency_iteration.Tpo -c -o test_adjacency_iteration-test_adjacency_iteration.o `test -f 'test_adjacency_iteration.cpp' || echo '$(srcdir)/'`test_adjacency_iteration.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_adjacency_iteration-test_adjacency_iteration.Tpo $(DEPDIR)/test_adjacency_iteration-test_adjacency_iteration.Po
#	$(AM_V_CXX)source='test_adjacency_iteration.cpp' object='test_adjacency_iteration-test_adjacency_iteration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_adjacency_iteration_CXXFLAGS) $(CXXFLAGS) -c -o test_adjacency_iteration-test_adjacency_iteration.o `test -f 'test_adjacency_iteration.cpp' || echo '$(srcdir)/'`test_adjacency_iteration.cpp

test_adjacency_iteration-test_adjacency_iteration.obj: test_adjacency_iteration.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_adjacency_iteration_CXXFLAGS) $(CXXFLAGS) -MT test_adjacency_iteration-test_adjacency_iteration.obj -MD -MP -MF $(DEPDIR)/test_adjacency_iteration-test_adjacency_iteration.Tpo -c -o test_adjacency_iteration-test_adjacency_iteration.obj `if test -f 'test_adjacency_iteration.cpp'; then $(CYGPATH_W) 'test_adjacency_iteration.cpp'; else $(CYGPATH_W) '$(srcdir)/test_adjacency_iteration.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_adjacency_iteration-test_adjacency_iteration.Tpo $(DEPDIR)/test_adjacency_iteration-test_adjacency_iteration.Po
#	$(AM_V_CXX)source='test_adjacency_iteration.cpp' object='test_adjacency_iteration-test_adjacency_iteration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_adjacency_iteration_CXXFLAGS) $(CXXFLAGS) -c -o test_adjacency_iteration-test_adjacency_iteration.obj `if test -f 'test_adjacency_iteration.cpp'; then $(CYGPATH_W) 'test_adjacency_iteration.cpp'; else $(CYGPATH_W) '$(srcdir)/test_adjacency_iteration.cpp'; fi`

test_badrank-test_badrank.o: test_badrank.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_badrank_CXXFLAGS) $(CXXFLAGS) -MT test_badrank-test_badrank.o -MD -MP -MF $(DEPDIR)/test_badrank-test_badrank.Tpo -c -o test_badrank-test_badrank.o `test -f 'test_badrank.cpp' || echo '$(srcdir)/'`test_badrank.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_badrank-test_badrank.Tpo $(DEPDIR)/test_badrank-test_badrank.Po
#	$(AM_V_CXX)source='test_badrank.cpp' object='test_badrank-test_badrank.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_badrank_CXXFLAGS) $(CXXFLAGS) -c -o test_badrank-test_badrank.o `test -f 'test_badrank.cpp' || echo '$(srcdir)/'`test_badrank.cpp

test_badrank-test_badrank.obj: test_badrank.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_badrank_CXXFLAGS) $(CXXFLAGS) -MT test_badrank-test_badrank.obj -MD -MP -MF $(DEPDIR)/test_badrank-test_badrank.Tpo -c -o test_badrank-test_badrank.obj `if test -f 'test_badrank.cpp'; then $(CYGPATH_W) 'test_badrank.cpp'; else $(CYGPATH_W) '$(srcdir)/test_badrank.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_badrank-test_badrank.Tpo $(DEPDIR)/test_badrank-test_badrank.Po
#	$(AM_V_CXX)source='test_badrank.cpp' object='test_badrank-test_badrank.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_badrank_CXXFLAGS) $(CXXFLAGS) -c -o test_badrank-test_badrank.obj `if test -f 'test_badrank.cpp'; then $(CYGPATH_W) 'test_badrank.cpp'; else $(CYGPATH_W) '$(srcdir)/test_badrank.cpp'; fi`

test_breadth_first_search-test_breadth_first_search.o: test_breadth_first_search.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_breadth_first_search_CXXFLAGS) $(CXXFLAGS) -MT test_breadth_first_search-test_breadth_first_search.o -MD -MP -MF $(DEPDIR)/test_breadth_first_search-test_breadth_first_search.Tpo -c -o test_breadth_first_search-test_breadth_first_search.o `test -f 'test_breadth_first_search.cpp' || echo '$(srcdir)/'`test_breadth_first_search.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_breadth_first_search-test_breadth_first_search.Tpo $(DEPDIR)/test_breadth_first_search-test_breadth_first_search.Po
#	$(AM_V_CXX)source='test_breadth_first_search.cpp' object='test_breadth_first_search-test_breadth_first_search.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_breadth_first_search_CXXFLAGS) $(CXXFLAGS) -c -o test_breadth_first_search-test_breadth_first_search.o `test -f 'test_breadth_first_search.cpp' || echo '$(srcdir)/'`test_breadth_first_search.cpp

test_breadth_first_search-test_breadth_first_search.obj: test_breadth_first_search.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_breadth_first_search_CXXFLAGS) $(CXXFLAGS) -MT test_breadth_first_search-test_breadth_first_search.obj -MD -MP -MF $(DEPDIR)/test_breadth_first_search-test_breadth_first_search.Tpo -c -o test_breadth_first_search-test_breadth_first_search.obj `if test -f 'test_breadth_first_search.cpp'; then $(CYGPATH_W) 'test_breadth_first_search.cpp'; else $(CYGPATH_W) '$(srcdir)/test_breadth_first_search.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_breadth_first_search-test_breadth_first_search.Tpo $(DEPDIR)/test_breadth_first_search-test_breadth_first_search.Po
#	$(AM_V_CXX)source='test_breadth_first_search.cpp' object='test_breadth_first_search-test_breadth_first_search.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_breadth_first_search_CXXFLAGS) $(CXXFLAGS) -c -o test_breadth_first_search-test_breadth_first_search.obj `if test -f 'test_breadth_first_search.cpp'; then $(CYGPATH_W) 'test_breadth_first_search.cpp'; else $(CYGPATH_W) '$(srcdir)/test_breadth_first_search.cpp'; fi`

test_connected_components-test_connected_components.o: test_connected_components.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_connected_components_CXXFLAGS) $(CXXFLAGS) -MT test_connected_components-test_connected_components.o -MD -MP -MF $(DEPDIR)/test_connected_components-test_connected_components.Tpo -c -o test_connected_components-test_connected_components.o `test -f 'test_connected_components.cpp' || echo '$(srcdir)/'`test_connected_components.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_connected_components-test_connected_components.Tpo $(DEPDIR)/test_connected_components-test_connected_components.Po
#	$(AM_V_CXX)source='test_connected_components.cpp' object='test_connected_components-test_connected_components.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_connected_components_CXXFLAGS) $(CXXFLAGS) -c -o test_connected_components-test_connected_components.o `test -f 'test_connected_components.cpp' || echo '$(srcdir)/'`test_connected_components.cpp

test_connected_components-test_connected_components.obj: test_connected_components.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_connected_components_CXXFLAGS) $(CXXFLAGS) -MT test_connected_components-test_connected_components.obj -MD -MP -MF $(DEPDIR)/test_connected_components-test_connected_components.Tpo -c -o test_connected_components-test_connected_components.obj `if test -f 'test_connected_components.cpp'; then $(CYGPATH_W) 'test_connected_components.cpp'; else $(CYGPATH_W) '$(srcdir)/test_connected_components.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_connected_components-test_connected_components.Tpo $(DEPDIR)/test_connected_components-test_connected_components.Po
#	$(AM_V_CXX)source='test_connected_components.cpp' object='test_connected_components-test_connected_components.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_connected_components_CXXFLAGS) $(CXXFLAGS) -c -o test_connected_components-test_connected_components.obj `if test -f 'test_connected_components.cpp'; then $(CYGPATH_W) 'test_connected_components.cpp'; else $(CYGPATH_W) '$(srcdir)/test_connected_components.cpp'; fi`

test_duplicate-test_duplicate.o: test_duplicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_duplicate_CXXFLAGS) $(CXXFLAGS) -MT test_duplicate-test_duplicate.o -MD -MP -MF $(DEPDIR)/test_duplicate-test_duplicate.Tpo -c -o test_duplicate-test_duplicate.o `test -f 'test_duplicate.cpp' || echo '$(srcdir)/'`test_duplicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_duplicate-test_duplicate.Tpo $(DEPDIR)/test_duplicate-test_duplicate.Po
#	$(AM_V_CXX)source='test_duplicate.cpp' object='test_duplicate-test_duplicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_duplicate_CXXFLAGS) $(CXXFLAGS) -c -o test_duplicate-test_duplicate.o `test -f 'test_duplicate.cpp' || echo '$(srcdir)/'`test_duplicate.cpp

test_duplicate-test_duplicate.obj: test_duplicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_duplicate_CXXFLAGS) $(CXXFLAGS) -MT test_duplicate-test_duplicate.obj -MD -MP -MF $(DEPDIR)/test_duplicate-test_duplicate.Tpo -c -o test_duplicate-test_duplicate.obj `if test -f 'test_duplicate.cpp'; then $(CYGPATH_W) 'test_duplicate.cpp'; else $(CYGPATH_W) '$(srcdir)/test_duplicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_duplicate-test_duplicate.Tpo $(DEPDIR)/test_duplicate-test_duplicate.Po
#	$(AM_V_CXX)source='test_duplicate.cpp' object='test_duplicate-test_duplicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_duplicate_CXXFLAGS) $(CXXFLAGS) -c -o test_duplicate-test_duplicate.obj `if test -f 'test_duplicate.cpp'; then $(CYGPATH_W) 'test_duplicate.cpp'; else $(CYGPATH_W) '$(srcdir)/test_duplicate.cpp'; fi`

test_dynamic_array-test_dynamic_array.o: test_dynamic_array.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_dynamic_array_CXXFLAGS) $(CXXFLAGS) -MT test_dynamic_array-test_dynamic_array.o -MD -MP -MF $(DEPDIR)/test_dynamic_array-test_dynamic_array.Tpo -c -o test_dynamic_array-test_dynamic_array.o `test -f 'test_dynamic_array.cpp' || echo '$(srcdir)/'`test_dynamic_array.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_dynamic_array-test_dynamic_array.Tpo $(DEPDIR)/test_dynamic_array-test_dynamic_array.Po
#	$(AM_V_CXX)source='test_dynamic_array.cpp' object='test_dynamic_array-test_dynamic_array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_dynamic_array_CXXFLAGS) $(CXXFLAGS) -c -o test_dynamic_array-test_dynamic_array.o `test -f 'test_dynamic_array.cpp' || echo '$(srcdir)/'`test_dynamic_array.cpp

test_dynamic_array-test_dynamic_array.obj: test_dynamic_array.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_dynamic_array_CXXFLAGS) $(CXXFLAGS) -MT test_dynamic_array-test_dynamic_array.obj -MD -MP -MF $(DEPDIR)/test_dynamic_array-test_dynamic_array.Tpo -c -o test_dynamic_array-test_dynamic_array.obj `if test -f 'test_dynamic_array.cpp'; then $(CYGPATH_W) 'test_dynamic_array.cpp'; else $(CYGPATH_W) '$(srcdir)/test_dynamic_array.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_dynamic_array-test_dynamic_array.Tpo $(DEPDIR)/test_dynamic_array-test_dynamic_array.Po
#	$(AM_V_CXX)source='test_dynamic_array.cpp' object='test_dynamic_array-test_dynamic_array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_dynamic_array_CXXFLAGS) $(CXXFLAGS) -c -o test_dynamic_array-test_dynamic_array.obj `if test -f 'test_dynamic_array.cpp'; then $(CYGPATH_W) 'test_dynamic_array.cpp'; else $(CYGPATH_W) '$(srcdir)/test_dynamic_array.cpp'; fi`

test_edmonds_karp-test_edmonds_karp.o: test_edmonds_karp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_edmonds_karp_CXXFLAGS) $(CXXFLAGS) -MT test_edmonds_karp-test_edmonds_karp.o -MD -MP -MF $(DEPDIR)/test_edmonds_karp-test_edmonds_karp.Tpo -c -o test_edmonds_karp-test_edmonds_karp.o `test -f 'test_edmonds_karp.cpp' || echo '$(srcdir)/'`test_edmonds_karp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_edmonds_karp-test_edmonds_karp.Tpo $(DEPDIR)/test_edmonds_karp-test_edmonds_karp.Po
#	$(AM_V_CXX)source='test_edmonds_karp.cpp' object='test_edmonds_karp-test_edmonds_karp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_edmonds_karp_CXXFLAGS) $(CXXFLAGS) -c -o test_edmonds_karp-test_edmonds_karp.o `test -f 'test_edmonds_karp.cpp' || echo '$(srcdir)/'`test_edmonds_karp.cpp

test_edmonds_karp-test_edmonds_karp.obj: test_edmonds_karp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_edmonds_karp_CXXFLAGS) $(CXXFLAGS) -MT test_edmonds_karp-test_edmonds_karp.obj -MD -MP -MF $(DEPDIR)/test_edmonds_karp-test_edmonds_karp.Tpo -c -o test_edmonds_karp-test_edmonds_karp.obj `if test -f 'test_edmonds_karp.cpp'; then $(CYGPATH_W) 'test_edmonds_karp.cpp'; else $(CYGPATH_W) '$(srcdir)/test_edmonds_karp.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_edmonds_karp-test_edmonds_karp.Tpo $(DEPDIR)/test_edmonds_karp-test_edmonds_karp.Po
#	$(AM_V_CXX)source='test_edmonds_karp.cpp' object='test_edmonds_karp-test_edmonds_karp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_edmonds_karp_CXXFLAGS) $(CXXFLAGS) -c -o test_edmonds_karp-test_edmonds_karp.obj `if test -f 'test_edmonds_karp.cpp'; then $(CYGPATH_W) 'test_edmonds_karp.cpp'; else $(CYGPATH_W) '$(srcdir)/test_edmonds_karp.cpp'; fi`

test_edmonds_karp_small-test_edmonds_karp_small.o: test_edmonds_karp_small.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_edmonds_karp_small_CXXFLAGS) $(CXXFLAGS) -MT test_edmonds_karp_small-test_edmonds_karp_small.o -MD -MP -MF $(DEPDIR)/test_edmonds_karp_small-test_edmonds_karp_small.Tpo -c -o test_edmonds_karp_small-test_edmonds_karp_small.o `test -f 'test_edmonds_karp_small.cpp' || echo '$(srcdir)/'`test_edmonds_karp_small.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_edmonds_karp_small-test_edmonds_karp_small.Tpo $(DEPDIR)/test_edmonds_karp_small-test_edmonds_karp_small.Po
#	$(AM_V_CXX)source='test_edmonds_karp_small.cpp' object='test_edmonds_karp_small-test_edmonds_karp_small.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_edmonds_karp_small_CXXFLAGS) $(CXXFLAGS) -c -o test_edmonds_karp_small-test_edmonds_karp_small.o `test -f 'test_edmonds_karp_small.cpp' || echo '$(srcdir)/'`test_edmonds_karp_small.cpp

test_edmonds_karp_small-test_edmonds_karp_small.obj: test_edmonds_karp_small.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_edmonds_karp_small_CXXFLAGS) $(CXXFLAGS) -MT test_edmonds_karp_small-test_edmonds_karp_small.obj -MD -MP -MF $(DEPDIR)/test_edmonds_karp_small-test_edmonds_karp_small.Tpo -c -o test_edmonds_karp_small-test_edmonds_karp_small.obj `if test -f 'test_edmonds_karp_small.cpp'; then $(CYGPATH_W) 'test_edmonds_karp_small.cpp'; else $(CYGPATH_W) '$(srcdir)/test_edmonds_karp_small.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_edmonds_karp_small-test_edmonds_karp_small.Tpo $(DEPDIR)/test_edmonds_karp_small-test_edmonds_karp_small.Po
#	$(AM_V_CXX)source='test_edmonds_karp_small.cpp' object='test_edmonds_karp_small-test_edmonds_karp_small.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_edmonds_karp_small_CXXFLAGS) $(CXXFLAGS) -c -o test_edmonds_karp_small-test_edmonds_karp_small.obj `if test -f 'test_edmonds_karp_small.cpp'; then $(CYGPATH_W) 'test_edmonds_karp_small.cpp'; else $(CYGPATH_W) '$(srcdir)/test_edmonds_karp_small.cpp'; fi`

test_expand_one_edge-test_expand_one_edge.o: test_expand_one_edge.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_expand_one_edge_CXXFLAGS) $(CXXFLAGS) -MT test_expand_one_edge-test_expand_one_edge.o -MD -MP -MF $(DEPDIR)/test_expand_one_edge-test_expand_one_edge.Tpo -c -o test_expand_one_edge-test_expand_one_edge.o `test -f 'test_expand_one_edge.cpp' || echo '$(srcdir)/'`test_expand_one_edge.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_expand_one_edge-test_expand_one_edge.Tpo $(DEPDIR)/test_expand_one_edge-test_expand_one_edge.Po
#	$(AM_V_CXX)source='test_expand_one_edge.cpp' object='test_expand_one_edge-test_expand_one_edge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_expand_one_edge_CXXFLAGS) $(CXXFLAGS) -c -o test_expand_one_edge-test_expand_one_edge.o `test -f 'test_expand_one_edge.cpp' || echo '$(srcdir)/'`test_expand_one_edge.cpp

test_expand_one_edge-test_expand_one_edge.obj: test_expand_one_edge.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_expand_one_edge_CXXFLAGS) $(CXXFLAGS) -MT test_expand_one_edge-test_expand_one_edge.obj -MD -MP -MF $(DEPDIR)/test_expand_one_edge-test_expand_one_edge.Tpo -c -o test_expand_one_edge-test_expand_one_edge.obj `if test -f 'test_expand_one_edge.cpp'; then $(CYGPATH_W) 'test_expand_one_edge.cpp'; else $(CYGPATH_W) '$(srcdir)/test_expand_one_edge.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_expand_one_edge-test_expand_one_edge.Tpo $(DEPDIR)/test_expand_one_edge-test_expand_one_edge.Po
#	$(AM_V_CXX)source='test_expand_one_edge.cpp' object='test_expand_one_edge-test_expand_one_edge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_expand_one_edge_CXXFLAGS) $(CXXFLAGS) -c -o test_expand_one_edge-test_expand_one_edge.obj `if test -f 'test_expand_one_edge.cpp'; then $(CYGPATH_W) 'test_expand_one_edge.cpp'; else $(CYGPATH_W) '$(srcdir)/test_expand_one_edge.cpp'; fi`

test_filtering-test_filtering.o: test_filtering.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_filtering_CXXFLAGS) $(CXXFLAGS) -MT test_filtering-test_filtering.o -MD -MP -MF $(DEPDIR)/test_filtering-test_filtering.Tpo -c -o test_filtering-test_filtering.o `test -f 'test_filtering.cpp' || echo '$(srcdir)/'`test_filtering.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_filtering-test_filtering.Tpo $(DEPDIR)/test_filtering-test_filtering.Po
#	$(AM_V_CXX)source='test_filtering.cpp' object='test_filtering-test_filtering.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_filtering_CXXFLAGS) $(CXXFLAGS) -c -o test_filtering-test_filtering.o `test -f 'test_filtering.cpp' || echo '$(srcdir)/'`test_filtering.cpp

test_filtering-test_filtering.obj: test_filtering.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_filtering_CXXFLAGS) $(CXXFLAGS) -MT test_filtering-test_filtering.obj -MD -MP -MF $(DEPDIR)/test_filtering-test_filtering.Tpo -c -o test_filtering-test_filtering.obj `if test -f 'test_filtering.cpp'; then $(CYGPATH_W) 'test_filtering.cpp'; else $(CYGPATH_W) '$(srcdir)/test_filtering.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_filtering-test_filtering.Tpo $(DEPDIR)/test_filtering-test_filtering.Po
#	$(AM_V_CXX)source='test_filtering.cpp' object='test_filtering-test_filtering.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_filtering_CXXFLAGS) $(CXXFLAGS) -c -o test_filtering-test_filtering.obj `if test -f 'test_filtering.cpp'; then $(CYGPATH_W) 'test_filtering.cpp'; else $(CYGPATH_W) '$(srcdir)/test_filtering.cpp'; fi`

test_graph-test_graph.o: test_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_graph_CXXFLAGS) $(CXXFLAGS) -MT test_graph-test_graph.o -MD -MP -MF $(DEPDIR)/test_graph-test_graph.Tpo -c -o test_graph-test_graph.o `test -f 'test_graph.cpp' || echo '$(srcdir)/'`test_graph.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_graph-test_graph.Tpo $(DEPDIR)/test_graph-test_graph.Po
#	$(AM_V_CXX)source='test_graph.cpp' object='test_graph-test_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_graph_CXXFLAGS) $(CXXFLAGS) -c -o test_graph-test_graph.o `test -f 'test_graph.cpp' || echo '$(srcdir)/'`test_graph.cpp

test_graph-test_graph.obj: test_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_graph_CXXFLAGS) $(CXXFLAGS) -MT test_graph-test_graph.obj -MD -MP -MF $(DEPDIR)/test_graph-test_graph.Tpo -c -o test_graph-test_graph.obj `if test -f 'test_graph.cpp'; then $(CYGPATH_W) 'test_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_graph.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_graph-test_graph.Tpo $(DEPDIR)/test_graph-test_graph.Po
#	$(AM_V_CXX)source='test_graph.cpp' object='test_graph-test_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_graph_CXXFLAGS) $(CXXFLAGS) -c -o test_graph-test_graph.obj `if test -f 'test_graph.cpp'; then $(CYGPATH_W) 'test_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_graph.cpp'; fi`

test_graph_parallel-test_graph_parallel.o: test_graph_parallel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_graph_parallel_CXXFLAGS) $(CXXFLAGS) -MT test_graph_parallel-test_graph_parallel.o -MD -MP -MF $(DEPDIR)/test_graph_parallel-test_graph_parallel.Tpo -c -o test_graph_parallel-test_graph_parallel.o `test -f 'test_graph_parallel.cpp' || echo '$(srcdir)/'`test_graph_parallel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_graph_parallel-test_graph_parallel.Tpo $(DEPDIR)/test_graph_parallel-test_graph_parallel.Po
#	$(AM_V_CXX)source='test_graph_parallel.cpp' object='test_graph_parallel-test_graph_parallel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_graph_parallel_CXXFLAGS) $(CXXFLAGS) -c -o test_graph_parallel-test_graph_parallel.o `test -f 'test_graph_parallel.cpp' || echo '$(srcdir)/'`test_graph_parallel.cpp

test_graph_parallel-test_graph_parallel.obj: test_graph_parallel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_graph_parallel_CXXFLAGS) $(CXXFLAGS) -MT test_graph_parallel-test_graph_parallel.obj -MD -MP -MF $(DEPDIR)/test_graph_parallel-test_graph_parallel.Tpo -c -o test_graph_parallel-test_graph_parallel.obj `if test -f 'test_graph_parallel.cpp'; then $(CYGPATH_W) 'test_graph_parallel.cpp'; else $(CYGPATH_W) '$(srcdir)/test_graph_parallel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_graph_parallel-test_graph_parallel.Tpo $(DEPDIR)/test_graph_parallel-test_graph_parallel.Po
#	$(AM_V_CXX)source='test_graph_parallel.cpp' object='test_graph_parallel-test_graph_parallel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_graph_parallel_CXXFLAGS) $(CXXFLAGS) -c -o test_graph_parallel-test_graph_parallel.obj `if test -f 'test_graph_parallel.cpp'; then $(CYGPATH_W) 'test_graph_parallel.cpp'; else $(CYGPATH_W) '$(srcdir)/test_graph_parallel.cpp'; fi`

test_hachar-test_hachar.o: test_hachar.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hachar_CXXFLAGS) $(CXXFLAGS) -MT test_hachar-test_hachar.o -MD -MP -MF $(DEPDIR)/test_hachar-test_hachar.Tpo -c -o test_hachar-test_hachar.o `test -f 'test_hachar.cpp' || echo '$(srcdir)/'`test_hachar.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_hachar-test_hachar.Tpo $(DEPDIR)/test_hachar-test_hachar.Po
#	$(AM_V_CXX)source='test_hachar.cpp' object='test_hachar-test_hachar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hachar_CXXFLAGS) $(CXXFLAGS) -c -o test_hachar-test_hachar.o `test -f 'test_hachar.cpp' || echo '$(srcdir)/'`test_hachar.cpp

test_hachar-test_hachar.obj: test_hachar.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hachar_CXXFLAGS) $(CXXFLAGS) -MT test_hachar-test_hachar.obj -MD -MP -MF $(DEPDIR)/test_hachar-test_hachar.Tpo -c -o test_hachar-test_hachar.obj `if test -f 'test_hachar.cpp'; then $(CYGPATH_W) 'test_hachar.cpp'; else $(CYGPATH_W) '$(srcdir)/test_hachar.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_hachar-test_hachar.Tpo $(DEPDIR)/test_hachar-test_hachar.Po
#	$(AM_V_CXX)source='test_hachar.cpp' object='test_hachar-test_hachar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hachar_CXXFLAGS) $(CXXFLAGS) -c -o test_hachar-test_hachar.obj `if test -f 'test_hachar.cpp'; then $(CYGPATH_W) 'test_hachar.cpp'; else $(CYGPATH_W) '$(srcdir)/test_hachar.cpp'; fi`

test_independent_set-test_independent_set.o: test_independent_set.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_independent_set_CXXFLAGS) $(CXXFLAGS) -MT test_independent_set-test_independent_set.o -MD -MP -MF $(DEPDIR)/test_independent_set-test_independent_set.Tpo -c -o test_independent_set-test_independent_set.o `test -f 'test_independent_set.cpp' || echo '$(srcdir)/'`test_independent_set.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_independent_set-test_independent_set.Tpo $(DEPDIR)/test_independent_set-test_independent_set.Po
#	$(AM_V_CXX)source='test_independent_set.cpp' object='test_independent_set-test_independent_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_independent_set_CXXFLAGS) $(CXXFLAGS) -c -o test_independent_set-test_independent_set.o `test -f 'test_independent_set.cpp' || echo '$(srcdir)/'`test_independent_set.cpp

test_independent_set-test_independent_set.obj: test_independent_set.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_independent_set_CXXFLAGS) $(CXXFLAGS) -MT test_independent_set-test_independent_set.obj -MD -MP -MF $(DEPDIR)/test_independent_set-test_independent_set.Tpo -c -o test_independent_set-test_independent_set.obj `if test -f 'test_independent_set.cpp'; then $(CYGPATH_W) 'test_independent_set.cpp'; else $(CYGPATH_W) '$(srcdir)/test_independent_set.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_independent_set-test_independent_set.Tpo $(DEPDIR)/test_independent_set-test_independent_set.Po
#	$(AM_V_CXX)source='test_independent_set.cpp' object='test_independent_set-test_independent_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_independent_set_CXXFLAGS) $(CXXFLAGS) -c -o test_independent_set-test_independent_set.obj `if test -f 'test_independent_set.cpp'; then $(CYGPATH_W) 'test_independent_set.cpp'; else $(CYGPATH_W) '$(srcdir)/test_independent_set.cpp'; fi`

test_mmap-test_mmap.o: test_mmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mmap_CXXFLAGS) $(CXXFLAGS) -MT test_mmap-test_mmap.o -MD -MP -MF $(DEPDIR)/test_mmap-test_mmap.Tpo -c -o test_mmap-test_mmap.o `test -f 'test_mmap.cpp' || echo '$(srcdir)/'`test_mmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_mmap-test_mmap.Tpo $(DEPDIR)/test_mmap-test_mmap.Po
#	$(AM_V_CXX)source='test_mmap.cpp' object='test_mmap-test_mmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mmap_CXXFLAGS) $(CXXFLAGS) -c -o test_mmap-test_mmap.o `test -f 'test_mmap.cpp' || echo '$(srcdir)/'`test_mmap.cpp

test_mmap-test_mmap.obj: test_mmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mmap_CXXFLAGS) $(CXXFLAGS) -MT test_mmap-test_mmap.obj -MD -MP -MF $(DEPDIR)/test_mmap-test_mmap.Tpo -c -o test_mmap-test_mmap.obj `if test -f 'test_mmap.cpp'; then $(CYGPATH_W) 'test_mmap.cpp'; else $(CYGPATH_W) '$(srcdir)/test_mmap.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_mmap-test_mmap.Tpo $(DEPDIR)/test_mmap-test_mmap.Po
#	$(AM_V_CXX)source='test_mmap.cpp' object='test_mmap-test_mmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mmap_CXXFLAGS) $(CXXFLAGS) -c -o test_mmap-test_mmap.obj `if test -f 'test_mmap.cpp'; then $(CYGPATH_W) 'test_mmap.cpp'; else $(CYGPATH_W) '$(srcdir)/test_mmap.cpp'; fi`

test_mtgl_strtok-test_mtgl_strtok.o: test_mtgl_strtok.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mtgl_strtok_CXXFLAGS) $(CXXFLAGS) -MT test_mtgl_strtok-test_mtgl_strtok.o -MD -MP -MF $(DEPDIR)/test_mtgl_strtok-test_mtgl_strtok.Tpo -c -o test_mtgl_strtok-test_mtgl_strtok.o `test -f 'test_mtgl_strtok.cpp' || echo '$(srcdir)/'`test_mtgl_strtok.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_mtgl_strtok-test_mtgl_strtok.Tpo $(DEPDIR)/test_mtgl_strtok-test_mtgl_strtok.Po
#	$(AM_V_CXX)source='test_mtgl_strtok.cpp' object='test_mtgl_strtok-test_mtgl_strtok.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mtgl_strtok_CXXFLAGS) $(CXXFLAGS) -c -o test_mtgl_strtok-test_mtgl_strtok.o `test -f 'test_mtgl_strtok.cpp' || echo '$(srcdir)/'`test_mtgl_strtok.cpp

test_mtgl_strtok-test_mtgl_strtok.obj: test_mtgl_strtok.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mtgl_strtok_CXXFLAGS) $(CXXFLAGS) -MT test_mtgl_strtok-test_mtgl_strtok.obj -MD -MP -MF $(DEPDIR)/test_mtgl_strtok-test_mtgl_strtok.Tpo -c -o test_mtgl_strtok-test_mtgl_strtok.obj `if test -f 'test_mtgl_strtok.cpp'; then $(CYGPATH_W) 'test_mtgl_strtok.cpp'; else $(CYGPATH_W) '$(srcdir)/test_mtgl_strtok.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_mtgl_strtok-test_mtgl_strtok.Tpo $(DEPDIR)/test_mtgl_strtok-test_mtgl_strtok.Po
#	$(AM_V_CXX)source='test_mtgl_strtok.cpp' object='test_mtgl_strtok-test_mtgl_strtok.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mtgl_strtok_CXXFLAGS) $(CXXFLAGS) -c -o test_mtgl_strtok-test_mtgl_strtok.obj `if test -f 'test_mtgl_strtok.cpp'; then $(CYGPATH_W) 'test_mtgl_strtok.cpp'; else $(CYGPATH_W) '$(srcdir)/test_mtgl_strtok.cpp'; fi`

test_mutable_graph-test_mutable_graph.o: test_mutable_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mutable_graph_CXXFLAGS) $(CXXFLAGS) -MT test_mutable_graph-test_mutable_graph.o -MD -MP -MF $(DEPDIR)/test_mutable_graph-test_mutable_graph.Tpo -c -o test_mutable_graph-test_mutable_graph.o `test -f 'test_mutable_graph.cpp' || echo '$(srcdir)/'`test_mutable_graph.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_mutable_graph-test_mutable_graph.Tpo $(DEPDIR)/test_mutable_graph-test_mutable_graph.Po
#	$(AM_V_CXX)source='test_mutable_graph.cpp' object='test_mutable_graph-test_mutable_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mutable_graph_CXXFLAGS) $(CXXFLAGS) -c -o test_mutable_graph-test_mutable_graph.o `test -f 'test_mutable_graph.cpp' || echo '$(srcdir)/'`test_mutable_graph.cpp

test_mutable_graph-test_mutable_graph.obj: test_mutable_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mutable_graph_CXXFLAGS) $(CXXFLAGS) -MT test_mutable_graph-test_mutable_graph.obj -MD -MP -MF $(DEPDIR)/test_mutable_graph-test_mutable_graph.Tpo -c -o test_mutable_graph-test_mutable_graph.obj `if test -f 'test_mutable_graph.cpp'; then $(CYGPATH_W) 'test_mutable_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_mutable_graph.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_mutable_graph-test_mutable_graph.Tpo $(DEPDIR)/test_mutable_graph-test_mutable_graph.Po
#	$(AM_V_CXX)source='test_mutable_graph.cpp' object='test_mutable_graph-test_mutable_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_mutable_graph_CXXFLAGS) $(CXXFLAGS) -c -o test_mutable_graph-test_mutable_graph.obj `if test -f 'test_mutable_graph.cpp'; then $(CYGPATH_W) 'test_mutable_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_mutable_graph.cpp'; fi`

test_numeric-test_numeric.o: test_numeric.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_numeric_CXXFLAGS) $(CXXFLAGS) -MT test_numeric-test_numeric.o -MD -MP -MF $(DEPDIR)/test_numeric-test_numeric.Tpo -c -o test_numeric-test_numeric.o `test -f 'test_numeric.cpp' || echo '$(srcdir)/'`test_numeric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_numeric-test_numeric.Tpo $(DEPDIR)/test_numeric-test_numeric.Po
#	$(AM_V_CXX)source='test_numeric.cpp' object='test_numeric-test_numeric.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_numeric_CXXFLAGS) $(CXXFLAGS) -c -o test_numeric-test_numeric.o `test -f 'test_numeric.cpp' || echo '$(srcdir)/'`test_numeric.cpp

test_numeric-test_numeric.obj: test_numeric.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_numeric_CXXFLAGS) $(CXXFLAGS) -MT test_numeric-test_numeric.obj -MD -MP -MF $(DEPDIR)/test_numeric-test_numeric.Tpo -c -o test_numeric-test_numeric.obj `if test -f 'test_numeric.cpp'; then $(CYGPATH_W) 'test_numeric.cpp'; else $(CYGPATH_W) '$(srcdir)/test_numeric.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_numeric-test_numeric.Tpo $(DEPDIR)/test_numeric-test_numeric.Po
#	$(AM_V_CXX)source='test_numeric.cpp' object='test_numeric-test_numeric.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_numeric_CXXFLAGS) $(CXXFLAGS) -c -o test_numeric-test_numeric.obj `if test -f 'test_numeric.cpp'; then $(CYGPATH_W) 'test_numeric.cpp'; else $(CYGPATH_W) '$(srcdir)/test_numeric.cpp'; fi`

test_pagerank-test_pagerank.o: test_pagerank.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pagerank_CXXFLAGS) $(CXXFLAGS) -MT test_pagerank-test_pagerank.o -MD -MP -MF $(DEPDIR)/test_pagerank-test_pagerank.Tpo -c -o test_pagerank-test_pagerank.o `test -f 'test_pagerank.cpp' || echo '$(srcdir)/'`test_pagerank.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_pagerank-test_pagerank.Tpo $(DEPDIR)/test_pagerank-test_pagerank.Po
#	$(AM_V_CXX)source='test_pagerank.cpp' object='test_pagerank-test_pagerank.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pagerank_CXXFLAGS) $(CXXFLAGS) -c -o test_pagerank-test_pagerank.o `test -f 'test_pagerank.cpp' || echo '$(srcdir)/'`test_pagerank.cpp

test_pagerank-test_pagerank.obj: test_pagerank.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pagerank_CXXFLAGS) $(CXXFLAGS) -MT test_pagerank-test_pagerank.obj -MD -MP -MF $(DEPDIR)/test_pagerank-test_pagerank.Tpo -c -o test_pagerank-test_pagerank.obj `if test -f 'test_pagerank.cpp'; then $(CYGPATH_W) 'test_pagerank.cpp'; else $(CYGPATH_W) '$(srcdir)/test_pagerank.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_pagerank-test_pagerank.Tpo $(DEPDIR)/test_pagerank-test_pagerank.Po
#	$(AM_V_CXX)source='test_pagerank.cpp' object='test_pagerank-test_pagerank.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pagerank_CXXFLAGS) $(CXXFLAGS) -c -o test_pagerank-test_pagerank.obj `if test -f 'test_pagerank.cpp'; then $(CYGPATH_W) 'test_pagerank.cpp'; else $(CYGPATH_W) '$(srcdir)/test_pagerank.cpp'; fi`

test_partitioning_schemes-test_partitioning_schemes.o: test_partitioning_schemes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_partitioning_schemes_CXXFLAGS) $(CXXFLAGS) -MT test_partitioning_schemes-test_partitioning_schemes.o -MD -MP -MF $(DEPDIR)/test_partitioning_schemes-test_partitioning_schemes.Tpo -c -o test_partitioning_schemes-test_partitioning_schemes.o `test -f 'test_partitioning_schemes.cpp' || echo '$(srcdir)/'`test_partitioning_schemes.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_partitioning_schemes-test_partitioning_schemes.Tpo $(DEPDIR)/test_partitioning_schemes-test_partitioning_schemes.Po
#	$(AM_V_CXX)source='test_partitioning_schemes.cpp' object='test_partitioning_schemes-test_partitioning_schemes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_partitioning_schemes_CXXFLAGS) $(CXXFLAGS) -c -o test_partitioning_schemes-test_partitioning_schemes.o `test -f 'test_partitioning_schemes.cpp' || echo '$(srcdir)/'`test_partitioning_schemes.cpp

test_partitioning_schemes-test_partitioning_schemes.obj: test_partitioning_schemes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_partitioning_schemes_CXXFLAGS) $(CXXFLAGS) -MT test_partitioning_schemes-test_partitioning_schemes.obj -MD -MP -MF $(DEPDIR)/test_partitioning_schemes-test_partitioning_schemes.Tpo -c -o test_partitioning_schemes-test_partitioning_schemes.obj `if test -f 'test_partitioning_schemes.cpp'; then $(CYGPATH_W) 'test_partitioning_schemes.cpp'; else $(CYGPATH_W) '$(srcdir)/test_partitioning_schemes.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_partitioning_schemes-test_partitioning_schemes.Tpo $(DEPDIR)/test_partitioning_schemes-test_partitioning_schemes.Po
#	$(AM_V_CXX)source='test_partitioning_schemes.cpp' object='test_partitioning_schemes-test_partitioning_schemes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_partitioning_schemes_CXXFLAGS) $(CXXFLAGS) -c -o test_partitioning_schemes-test_partitioning_schemes.obj `if test -f 'test_partitioning_schemes.cpp'; then $(CYGPATH_W) 'test_partitioning_schemes.cpp'; else $(CYGPATH_W) '$(srcdir)/test_partitioning_schemes.cpp'; fi`

test_persist_xht-test_persist_xht.o: test_persist_xht.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_persist_xht_CXXFLAGS) $(CXXFLAGS) -MT test_persist_xht-test_persist_xht.o -MD -MP -MF $(DEPDIR)/test_persist_xht-test_persist_xht.Tpo -c -o test_persist_xht-test_persist_xht.o `test -f 'test_persist_xht.cpp' || echo '$(srcdir)/'`test_persist_xht.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_persist_xht-test_persist_xht.Tpo $(DEPDIR)/test_persist_xht-test_persist_xht.Po
#	$(AM_V_CXX)source='test_persist_xht.cpp' object='test_persist_xht-test_persist_xht.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_persist_xht_CXXFLAGS) $(CXXFLAGS) -c -o test_persist_xht-test_persist_xht.o `test -f 'test_persist_xht.cpp' || echo '$(srcdir)/'`test_persist_xht.cpp

test_persist_xht-test_persist_xht.obj: test_persist_xht.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_persist_xht_CXXFLAGS) $(CXXFLAGS) -MT test_persist_xht-test_persist_xht.obj -MD -MP -MF $(DEPDIR)/test_persist_xht-test_persist_xht.Tpo -c -o test_persist_xht-test_persist_xht.obj `if test -f 'test_persist_xht.cpp'; then $(CYGPATH_W) 'test_persist_xht.cpp'; else $(CYGPATH_W) '$(srcdir)/test_persist_xht.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_persist_xht-test_persist_xht.Tpo $(DEPDIR)/test_persist_xht-test_persist_xht.Po
#	$(AM_V_CXX)source='test_persist_xht.cpp' object='test_persist_xht-test_persist_xht.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_persist_xht_CXXFLAGS) $(CXXFLAGS) -c -o test_persist_xht-test_persist_xht.obj `if test -f 'test_persist_xht.cpp'; then $(CYGPATH_W) 'test_persist_xht.cpp'; else $(CYGPATH_W) '$(srcdir)/test_persist_xht.cpp'; fi`

test_property_map-test_property_map.o: test_property_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_property_map_CXXFLAGS) $(CXXFLAGS) -MT test_property_map-test_property_map.o -MD -MP -MF $(DEPDIR)/test_property_map-test_property_map.Tpo -c -o test_property_map-test_property_map.o `test -f 'test_property_map.cpp' || echo '$(srcdir)/'`test_property_map.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_property_map-test_property_map.Tpo $(DEPDIR)/test_property_map-test_property_map.Po
#	$(AM_V_CXX)source='test_property_map.cpp' object='test_property_map-test_property_map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_property_map_CXXFLAGS) $(CXXFLAGS) -c -o test_property_map-test_property_map.o `test -f 'test_property_map.cpp' || echo '$(srcdir)/'`test_property_map.cpp

test_property_map-test_property_map.obj: test_property_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_property_map_CXXFLAGS) $(CXXFLAGS) -MT test_property_map-test_property_map.obj -MD -MP -MF $(DEPDIR)/test_property_map-test_property_map.Tpo -c -o test_property_map-test_property_map.obj `if test -f 'test_property_map.cpp'; then $(CYGPATH_W) 'test_property_map.cpp'; else $(CYGPATH_W) '$(srcdir)/test_property_map.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_property_map-test_property_map.Tpo $(DEPDIR)/test_property_map-test_property_map.Po
#	$(AM_V_CXX)source='test_property_map.cpp' object='test_property_map-test_property_map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_property_map_CXXFLAGS) $(CXXFLAGS) -c -o test_property_map-test_property_map.obj `if test -f 'test_property_map.cpp'; then $(CYGPATH_W) 'test_property_map.cpp'; else $(CYGPATH_W) '$(srcdir)/test_property_map.cpp'; fi`

test_pseudo_diameter-test_pseudo_diameter.o: test_pseudo_diameter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pseudo_diameter_CXXFLAGS) $(CXXFLAGS) -MT test_pseudo_diameter-test_pseudo_diameter.o -MD -MP -MF $(DEPDIR)/test_pseudo_diameter-test_pseudo_diameter.Tpo -c -o test_pseudo_diameter-test_pseudo_diameter.o `test -f 'test_pseudo_diameter.cpp' || echo '$(srcdir)/'`test_pseudo_diameter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_pseudo_diameter-test_pseudo_diameter.Tpo $(DEPDIR)/test_pseudo_diameter-test_pseudo_diameter.Po
#	$(AM_V_CXX)source='test_pseudo_diameter.cpp' object='test_pseudo_diameter-test_pseudo_diameter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pseudo_diameter_CXXFLAGS) $(CXXFLAGS) -c -o test_pseudo_diameter-test_pseudo_diameter.o `test -f 'test_pseudo_diameter.cpp' || echo '$(srcdir)/'`test_pseudo_diameter.cpp

test_pseudo_diameter-test_pseudo_diameter.obj: test_pseudo_diameter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pseudo_diameter_CXXFLAGS) $(CXXFLAGS) -MT test_pseudo_diameter-test_pseudo_diameter.obj -MD -MP -MF $(DEPDIR)/test_pseudo_diameter-test_pseudo_diameter.Tpo -c -o test_pseudo_diameter-test_pseudo_diameter.obj `if test -f 'test_pseudo_diameter.cpp'; then $(CYGPATH_W) 'test_pseudo_diameter.cpp'; else $(CYGPATH_W) '$(srcdir)/test_pseudo_diameter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_pseudo_diameter-test_pseudo_diameter.Tpo $(DEPDIR)/test_pseudo_diameter-test_pseudo_diameter.Po
#	$(AM_V_CXX)source='test_pseudo_diameter.cpp' object='test_pseudo_diameter-test_pseudo_diameter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pseudo_diameter_CXXFLAGS) $(CXXFLAGS) -c -o test_pseudo_diameter-test_pseudo_diameter.obj `if test -f 'test_pseudo_diameter.cpp'; then $(CYGPATH_W) 'test_pseudo_diameter.cpp'; else $(CYGPATH_W) '$(srcdir)/test_pseudo_diameter.cpp'; fi`

test_random-test_random.o: test_random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_random_CXXFLAGS) $(CXXFLAGS) -MT test_random-test_random.o -MD -MP -MF $(DEPDIR)/test_random-test_random.Tpo -c -o test_random-test_random.o `test -f 'test_random.cpp' || echo '$(srcdir)/'`test_random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_random-test_random.Tpo $(DEPDIR)/test_random-test_random.Po
#	$(AM_V_CXX)source='test_random.cpp' object='test_random-test_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_random_CXXFLAGS) $(CXXFLAGS) -c -o test_random-test_random.o `test -f 'test_random.cpp' || echo '$(srcdir)/'`test_random.cpp

test_random-test_random.obj: test_random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_random_CXXFLAGS) $(CXXFLAGS) -MT test_random-test_random.obj -MD -MP -MF $(DEPDIR)/test_random-test_random.Tpo -c -o test_random-test_random.obj `if test -f 'test_random.cpp'; then $(CYGPATH_W) 'test_random.cpp'; else $(CYGPATH_W) '$(srcdir)/test_random.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_random-test_random.Tpo $(DEPDIR)/test_random-test_random.Po
#	$(AM_V_CXX)source='test_random.cpp' object='test_random-test_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_random_CXXFLAGS) $(CXXFLAGS) -c -o test_random-test_random.obj `if test -f 'test_random.cpp'; then $(CYGPATH_W) 'test_random.cpp'; else $(CYGPATH_W) '$(srcdir)/test_random.cpp'; fi`

test_read_graph-test_read_graph.o: test_read_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_read_graph_CXXFLAGS) $(CXXFLAGS) -MT test_read_graph-test_read_graph.o -MD -MP -MF $(DEPDIR)/test_read_graph-test_read_graph.Tpo -c -o test_read_graph-test_read_graph.o `test -f 'test_read_graph.cpp' || echo '$(srcdir)/'`test_read_graph.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_read_graph-test_read_graph.Tpo $(DEPDIR)/test_read_graph-test_read_graph.Po
#	$(AM_V_CXX)source='test_read_graph.cpp' object='test_read_graph-test_read_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_read_graph_CXXFLAGS) $(CXXFLAGS) -c -o test_read_graph-test_read_graph.o `test -f 'test_read_graph.cpp' || echo '$(srcdir)/'`test_read_graph.cpp

test_read_graph-test_read_graph.obj: test_read_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_read_graph_CXXFLAGS) $(CXXFLAGS) -MT test_read_graph-test_read_graph.obj -MD -MP -MF $(DEPDIR)/test_read_graph-test_read_graph.Tpo -c -o test_read_graph-test_read_graph.obj `if test -f 'test_read_graph.cpp'; then $(CYGPATH_W) 'test_read_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_read_graph.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_read_graph-test_read_graph.Tpo $(DEPDIR)/test_read_graph-test_read_graph.Po
#	$(AM_V_CXX)source='test_read_graph.cpp' object='test_read_graph-test_read_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_read_graph_CXXFLAGS) $(CXXFLAGS) -c -o test_read_graph-test_read_graph.obj `if test -f 'test_read_graph.cpp'; then $(CYGPATH_W) 'test_read_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_read_graph.cpp'; fi`

test_shared_ptr-test_shared_ptr.o: test_shared_ptr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_shared_ptr_CXXFLAGS) $(CXXFLAGS) -MT test_shared_ptr-test_shared_ptr.o -MD -MP -MF $(DEPDIR)/test_shared_ptr-test_shared_ptr.Tpo -c -o test_shared_ptr-test_shared_ptr.o `test -f 'test_shared_ptr.cpp' || echo '$(srcdir)/'`test_shared_ptr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_shared_ptr-test_shared_ptr.Tpo $(DEPDIR)/test_shared_ptr-test_shared_ptr.Po
#	$(AM_V_CXX)source='test_shared_ptr.cpp' object='test_shared_ptr-test_shared_ptr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_shared_ptr_CXXFLAGS) $(CXXFLAGS) -c -o test_shared_ptr-test_shared_ptr.o `test -f 'test_shared_ptr.cpp' || echo '$(srcdir)/'`test_shared_ptr.cpp

test_shared_ptr-test_shared_ptr.obj: test_shared_ptr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_shared_ptr_CXXFLAGS) $(CXXFLAGS) -MT test_shared_ptr-test_shared_ptr.obj -MD -MP -MF $(DEPDIR)/test_shared_ptr-test_shared_ptr.Tpo -c -o test_shared_ptr-test_shared_ptr.obj `if test -f 'test_shared_ptr.cpp'; then $(CYGPATH_W) 'test_shared_ptr.cpp'; else $(CYGPATH_W) '$(srcdir)/test_shared_ptr.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_shared_ptr-test_shared_ptr.Tpo $(DEPDIR)/test_shared_ptr-test_shared_ptr.Po
#	$(AM_V_CXX)source='test_shared_ptr.cpp' object='test_shared_ptr-test_shared_ptr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_shared_ptr_CXXFLAGS) $(CXXFLAGS) -c -o test_shared_ptr-test_shared_ptr.obj `if test -f 'test_shared_ptr.cpp'; then $(CYGPATH_W) 'test_shared_ptr.cpp'; else $(CYGPATH_W) '$(srcdir)/test_shared_ptr.cpp'; fi`

test_sort-test_sort.o: test_sort.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sort_CXXFLAGS) $(CXXFLAGS) -MT test_sort-test_sort.o -MD -MP -MF $(DEPDIR)/test_sort-test_sort.Tpo -c -o test_sort-test_sort.o `test -f 'test_sort.cpp' || echo '$(srcdir)/'`test_sort.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sort-test_sort.Tpo $(DEPDIR)/test_sort-test_sort.Po
#	$(AM_V_CXX)source='test_sort.cpp' object='test_sort-test_sort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sort_CXXFLAGS) $(CXXFLAGS) -c -o test_sort-test_sort.o `test -f 'test_sort.cpp' || echo '$(srcdir)/'`test_sort.cpp

test_sort-test_sort.obj: test_sort.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sort_CXXFLAGS) $(CXXFLAGS) -MT test_sort-test_sort.obj -MD -MP -MF $(DEPDIR)/test_sort-test_sort.Tpo -c -o test_sort-test_sort.obj `if test -f 'test_sort.cpp'; then $(CYGPATH_W) 'test_sort.cpp'; else $(CYGPATH_W) '$(srcdir)/test_sort.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sort-test_sort.Tpo $(DEPDIR)/test_sort-test_sort.Po
#	$(AM_V_CXX)source='test_sort.cpp' object='test_sort-test_sort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sort_CXXFLAGS) $(CXXFLAGS) -c -o test_sort-test_sort.obj `if test -f 'test_sort.cpp'; then $(CYGPATH_W) 'test_sort.cpp'; else $(CYGPATH_W) '$(srcdir)/test_sort.cpp'; fi`

test_sssp_deltastepping-test_sssp_deltastepping.o: test_sssp_deltastepping.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sssp_deltastepping_CXXFLAGS) $(CXXFLAGS) -MT test_sssp_deltastepping-test_sssp_deltastepping.o -MD -MP -MF $(DEPDIR)/test_sssp_deltastepping-test_sssp_deltastepping.Tpo -c -o test_sssp_deltastepping-test_sssp_deltastepping.o `test -f 'test_sssp_deltastepping.cpp' || echo '$(srcdir)/'`test_sssp_deltastepping.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sssp_deltastepping-test_sssp_deltastepping.Tpo $(DEPDIR)/test_sssp_deltastepping-test_sssp_deltastepping.Po
#	$(AM_V_CXX)source='test_sssp_deltastepping.cpp' object='test_sssp_deltastepping-test_sssp_deltastepping.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sssp_deltastepping_CXXFLAGS) $(CXXFLAGS) -c -o test_sssp_deltastepping-test_sssp_deltastepping.o `test -f 'test_sssp_deltastepping.cpp' || echo '$(srcdir)/'`test_sssp_deltastepping.cpp

test_sssp_deltastepping-test_sssp_deltastepping.obj: test_sssp_deltastepping.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sssp_deltastepping_CXXFLAGS) $(CXXFLAGS) -MT test_sssp_deltastepping-test_sssp_deltastepping.obj -MD -MP -MF $(DEPDIR)/test_sssp_deltastepping-test_sssp_deltastepping.Tpo -c -o test_sssp_deltastepping-test_sssp_deltastepping.obj `if test -f 'test_sssp_deltastepping.cpp'; then $(CYGPATH_W) 'test_sssp_deltastepping.cpp'; else $(CYGPATH_W) '$(srcdir)/test_sssp_deltastepping.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sssp_deltastepping-test_sssp_deltastepping.Tpo $(DEPDIR)/test_sssp_deltastepping-test_sssp_deltastepping.Po
#	$(AM_V_CXX)source='test_sssp_deltastepping.cpp' object='test_sssp_deltastepping-test_sssp_deltastepping.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sssp_deltastepping_CXXFLAGS) $(CXXFLAGS) -c -o test_sssp_deltastepping-test_sssp_deltastepping.obj `if test -f 'test_sssp_deltastepping.cpp'; then $(CYGPATH_W) 'test_sssp_deltastepping.cpp'; else $(CYGPATH_W) '$(srcdir)/test_sssp_deltastepping.cpp'; fi`

test_subgraph-test_subgraph.o: test_subgraph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_subgraph_CXXFLAGS) $(CXXFLAGS) -MT test_subgraph-test_subgraph.o -MD -MP -MF $(DEPDIR)/test_subgraph-test_subgraph.Tpo -c -o test_subgraph-test_subgraph.o `test -f 'test_subgraph.cpp' || echo '$(srcdir)/'`test_subgraph.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_subgraph-test_subgraph.Tpo $(DEPDIR)/test_subgraph-test_subgraph.Po
#	$(AM_V_CXX)source='test_subgraph.cpp' object='test_subgraph-test_subgraph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_subgraph_CXXFLAGS) $(CXXFLAGS) -c -o test_subgraph-test_subgraph.o `test -f 'test_subgraph.cpp' || echo '$(srcdir)/'`test_subgraph.cpp

test_subgraph-test_subgraph.obj: test_subgraph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_subgraph_CXXFLAGS) $(CXXFLAGS) -MT test_subgraph-test_subgraph.obj -MD -MP -MF $(DEPDIR)/test_subgraph-test_subgraph.Tpo -c -o test_subgraph-test_subgraph.obj `if test -f 'test_subgraph.cpp'; then $(CYGPATH_W) 'test_subgraph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_subgraph.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_subgraph-test_subgraph.Tpo $(DEPDIR)/test_subgraph-test_subgraph.Po
#	$(AM_V_CXX)source='test_subgraph.cpp' object='test_subgraph-test_subgraph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_subgraph_CXXFLAGS) $(CXXFLAGS) -c -o test_subgraph-test_subgraph.obj `if test -f 'test_subgraph.cpp'; then $(CYGPATH_W) 'test_subgraph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_subgraph.cpp'; fi`

test_subgraph_isomorphism-test_subgraph_isomorphism.o: test_subgraph_isomorphism.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_subgraph_isomorphism_CXXFLAGS) $(CXXFLAGS) -MT test_subgraph_isomorphism-test_subgraph_isomorphism.o -MD -MP -MF $(DEPDIR)/test_subgraph_isomorphism-test_subgraph_isomorphism.Tpo -c -o test_subgraph_isomorphism-test_subgraph_isomorphism.o `test -f 'test_subgraph_isomorphism.cpp' || echo '$(srcdir)/'`test_subgraph_isomorphism.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_subgraph_isomorphism-test_subgraph_isomorphism.Tpo $(DEPDIR)/test_subgraph_isomorphism-test_subgraph_isomorphism.Po
#	$(AM_V_CXX)source='test_subgraph_isomorphism.cpp' object='test_subgraph_isomorphism-test_subgraph_isomorphism.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_subgraph_isomorphism_CXXFLAGS) $(CXXFLAGS) -c -o test_subgraph_isomorphism-test_subgraph_isomorphism.o `test -f 'test_subgraph_isomorphism.cpp' || echo '$(srcdir)/'`test_subgraph_isomorphism.cpp

test_subgraph_isomorphism-test_subgraph_isomorphism.obj: test_subgraph_isomorphism.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_subgraph_isomorphism_CXXFLAGS) $(CXXFLAGS) -MT test_subgraph_isomorphism-test_subgraph_isomorphism.obj -MD -MP -MF $(DEPDIR)/test_subgraph_isomorphism-test_subgraph_isomorphism.Tpo -c -o test_subgraph_isomorphism-test_subgraph_isomorphism.obj `if test -f 'test_subgraph_isomorphism.cpp'; then $(CYGPATH_W) 'test_subgraph_isomorphism.cpp'; else $(CYGPATH_W) '$(srcdir)/test_subgraph_isomorphism.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_subgraph_isomorphism-test_subgraph_isomorphism.Tpo $(DEPDIR)/test_subgraph_isomorphism-test_subgraph_isomorphism.Po
#	$(AM_V_CXX)source='test_subgraph_isomorphism.cpp' object='test_subgraph_isomorphism-test_subgraph_isomorphism.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_subgraph_isomorphism_CXXFLAGS) $(CXXFLAGS) -c -o test_subgraph_isomorphism-test_subgraph_isomorphism.obj `if test -f 'test_subgraph_isomorphism.cpp'; then $(CYGPATH_W) 'test_subgraph_isomorphism.cpp'; else $(CYGPATH_W) '$(srcdir)/test_subgraph_isomorphism.cpp'; fi`

test_triangles-test_triangles.o: test_triangles.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_triangles_CXXFLAGS) $(CXXFLAGS) -MT test_triangles-test_triangles.o -MD -MP -MF $(DEPDIR)/test_triangles-test_triangles.Tpo -c -o test_triangles-test_triangles.o `test -f 'test_triangles.cpp' || echo '$(srcdir)/'`test_triangles.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_triangles-test_triangles.Tpo $(DEPDIR)/test_triangles-test_triangles.Po
#	$(AM_V_CXX)source='test_triangles.cpp' object='test_triangles-test_triangles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_triangles_CXXFLAGS) $(CXXFLAGS) -c -o test_triangles-test_triangles.o `test -f 'test_triangles.cpp' || echo '$(srcdir)/'`test_triangles.cpp

test_triangles-test_triangles.obj: test_triangles.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_triangles_CXXFLAGS) $(CXXFLAGS) -MT test_triangles-test_triangles.obj -MD -MP -MF $(DEPDIR)/test_triangles-test_triangles.Tpo -c -o test_triangles-test_triangles.obj `if test -f 'test_triangles.cpp'; then $(CYGPATH_W) 'test_triangles.cpp'; else $(CYGPATH_W) '$(srcdir)/test_triangles.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_triangles-test_triangles.Tpo $(DEPDIR)/test_triangles-test_triangles.Po
#	$(AM_V_CXX)source='test_triangles.cpp' object='test_triangles-test_triangles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_triangles_CXXFLAGS) $(CXXFLAGS) -c -o test_triangles-test_triangles.obj `if test -f 'test_triangles.cpp'; then $(CYGPATH_W) 'test_triangles.cpp'; else $(CYGPATH_W) '$(srcdir)/test_triangles.cpp'; fi`

test_vertex_betweenness-test_vertex_betweenness.o: test_vertex_betweenness.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vertex_betweenness_CXXFLAGS) $(CXXFLAGS) -MT test_vertex_betweenness-test_vertex_betweenness.o -MD -MP -MF $(DEPDIR)/test_vertex_betweenness-test_vertex_betweenness.Tpo -c -o test_vertex_betweenness-test_vertex_betweenness.o `test -f 'test_vertex_betweenness.cpp' || echo '$(srcdir)/'`test_vertex_betweenness.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_vertex_betweenness-test_vertex_betweenness.Tpo $(DEPDIR)/test_vertex_betweenness-test_vertex_betweenness.Po
#	$(AM_V_CXX)source='test_vertex_betweenness.cpp' object='test_vertex_betweenness-test_vertex_betweenness.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vertex_betweenness_CXXFLAGS) $(CXXFLAGS) -c -o test_vertex_betweenness-test_vertex_betweenness.o `test -f 'test_vertex_betweenness.cpp' || echo '$(srcdir)/'`test_vertex_betweenness.cpp

test_vertex_betweenness-test_vertex_betweenness.obj: test_vertex_betweenness.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vertex_betweenness_CXXFLAGS) $(CXXFLAGS) -MT test_vertex_betweenness-test_vertex_betweenness.obj -MD -MP -MF $(DEPDIR)/test_vertex_betweenness-test_vertex_betweenness.Tpo -c -o test_vertex_betweenness-test_vertex_betweenness.obj `if test -f 'test_vertex_betweenness.cpp'; then $(CYGPATH_W) 'test_vertex_betweenness.cpp'; else $(CYGPATH_W) '$(srcdir)/test_vertex_betweenness.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_vertex_betweenness-test_vertex_betweenness.Tpo $(DEPDIR)/test_vertex_betweenness-test_vertex_betweenness.Po
#	$(AM_V_CXX)source='test_vertex_betweenness.cpp' object='test_vertex_betweenness-test_vertex_betweenness.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vertex_betweenness_CXXFLAGS) $(CXXFLAGS) -c -o test_vertex_betweenness-test_vertex_betweenness.obj `if test -f 'test_vertex_betweenness.cpp'; then $(CYGPATH_W) 'test_vertex_betweenness.cpp'; else $(CYGPATH_W) '$(srcdir)/test_vertex_betweenness.cpp'; fi`

test_wcnm-test_wcnm.o: test_wcnm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -MT test_wcnm-test_wcnm.o -MD -MP -MF $(DEPDIR)/test_wcnm-test_wcnm.Tpo -c -o test_wcnm-test_wcnm.o `test -f 'test_wcnm.cpp' || echo '$(srcdir)/'`test_wcnm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_wcnm-test_wcnm.Tpo $(DEPDIR)/test_wcnm-test_wcnm.Po
#	$(AM_V_CXX)source='test_wcnm.cpp' object='test_wcnm-test_wcnm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -c -o test_wcnm-test_wcnm.o `test -f 'test_wcnm.cpp' || echo '$(srcdir)/'`test_wcnm.cpp

test_wcnm-test_wcnm.obj: test_wcnm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -MT test_wcnm-test_wcnm.obj -MD -MP -MF $(DEPDIR)/test_wcnm-test_wcnm.Tpo -c -o test_wcnm-test_wcnm.obj `if test -f 'test_wcnm.cpp'; then $(CYGPATH_W) 'test_wcnm.cpp'; else $(CYGPATH_W) '$(srcdir)/test_wcnm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_wcnm-test_wcnm.Tpo $(DEPDIR)/test_wcnm-test_wcnm.Po
#	$(AM_V_CXX)source='test_wcnm.cpp' object='test_wcnm-test_wcnm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -c -o test_wcnm-test_wcnm.obj `if test -f 'test_wcnm.cpp'; then $(CYGPATH_W) 'test_wcnm.cpp'; else $(CYGPATH_W) '$(srcdir)/test_wcnm.cpp'; fi`

test_wcnm-ufl.o: ufl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -MT test_wcnm-ufl.o -MD -MP -MF $(DEPDIR)/test_wcnm-ufl.Tpo -c -o test_wcnm-ufl.o `test -f 'ufl.cpp' || echo '$(srcdir)/'`ufl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_wcnm-ufl.Tpo $(DEPDIR)/test_wcnm-ufl.Po
#	$(AM_V_CXX)source='ufl.cpp' object='test_wcnm-ufl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -c -o test_wcnm-ufl.o `test -f 'ufl.cpp' || echo '$(srcdir)/'`ufl.cpp

test_wcnm-ufl.obj: ufl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -MT test_wcnm-ufl.obj -MD -MP -MF $(DEPDIR)/test_wcnm-ufl.Tpo -c -o test_wcnm-ufl.obj `if test -f 'ufl.cpp'; then $(CYGPATH_W) 'ufl.cpp'; else $(CYGPATH_W) '$(srcdir)/ufl.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_wcnm-ufl.Tpo $(DEPDIR)/test_wcnm-ufl.Po
#	$(AM_V_CXX)source='ufl.cpp' object='test_wcnm-ufl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -c -o test_wcnm-ufl.obj `if test -f 'ufl.cpp'; then $(CYGPATH_W) 'ufl.cpp'; else $(CYGPATH_W) '$(srcdir)/ufl.cpp'; fi`

test_wcnm-VolVolume.o: VolVolume.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -MT test_wcnm-VolVolume.o -MD -MP -MF $(DEPDIR)/test_wcnm-VolVolume.Tpo -c -o test_wcnm-VolVolume.o `test -f 'VolVolume.cpp' || echo '$(srcdir)/'`VolVolume.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_wcnm-VolVolume.Tpo $(DEPDIR)/test_wcnm-VolVolume.Po
#	$(AM_V_CXX)source='VolVolume.cpp' object='test_wcnm-VolVolume.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -c -o test_wcnm-VolVolume.o `test -f 'VolVolume.cpp' || echo '$(srcdir)/'`VolVolume.cpp

test_wcnm-VolVolume.obj: VolVolume.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -MT test_wcnm-VolVolume.obj -MD -MP -MF $(DEPDIR)/test_wcnm-VolVolume.Tpo -c -o test_wcnm-VolVolume.obj `if test -f 'VolVolume.cpp'; then $(CYGPATH_W) 'VolVolume.cpp'; else $(CYGPATH_W) '$(srcdir)/VolVolume.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_wcnm-VolVolume.Tpo $(DEPDIR)/test_wcnm-VolVolume.Po
#	$(AM_V_CXX)source='VolVolume.cpp' object='test_wcnm-VolVolume.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_wcnm_CXXFLAGS) $(CXXFLAGS) -c -o test_wcnm-VolVolume.obj `if test -f 'VolVolume.cpp'; then $(CYGPATH_W) 'VolVolume.cpp'; else $(CYGPATH_W) '$(srcdir)/VolVolume.cpp'; fi`

test_write_graph-test_write_graph.o: test_write_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_write_graph_CXXFLAGS) $(CXXFLAGS) -MT test_write_graph-test_write_graph.o -MD -MP -MF $(DEPDIR)/test_write_graph-test_write_graph.Tpo -c -o test_write_graph-test_write_graph.o `test -f 'test_write_graph.cpp' || echo '$(srcdir)/'`test_write_graph.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_write_graph-test_write_graph.Tpo $(DEPDIR)/test_write_graph-test_write_graph.Po
#	$(AM_V_CXX)source='test_write_graph.cpp' object='test_write_graph-test_write_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_write_graph_CXXFLAGS) $(CXXFLAGS) -c -o test_write_graph-test_write_graph.o `test -f 'test_write_graph.cpp' || echo '$(srcdir)/'`test_write_graph.cpp

test_write_graph-test_write_graph.obj: test_write_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_write_graph_CXXFLAGS) $(CXXFLAGS) -MT test_write_graph-test_write_graph.obj -MD -MP -MF $(DEPDIR)/test_write_graph-test_write_graph.Tpo -c -o test_write_graph-test_write_graph.obj `if test -f 'test_write_graph.cpp'; then $(CYGPATH_W) 'test_write_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_write_graph.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_write_graph-test_write_graph.Tpo $(DEPDIR)/test_write_graph-test_write_graph.Po
#	$(AM_V_CXX)source='test_write_graph.cpp' object='test_write_graph-test_write_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_write_graph_CXXFLAGS) $(CXXFLAGS) -c -o test_write_graph-test_write_graph.obj `if test -f 'test_write_graph.cpp'; then $(CYGPATH_W) 'test_write_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_write_graph.cpp'; fi`

test_xmt_hash_set-test_xmt_hash_set.o: test_xmt_hash_set.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_xmt_hash_set_CXXFLAGS) $(CXXFLAGS) -MT test_xmt_hash_set-test_xmt_hash_set.o -MD -MP -MF $(DEPDIR)/test_xmt_hash_set-test_xmt_hash_set.Tpo -c -o test_xmt_hash_set-test_xmt_hash_set.o `test -f 'test_xmt_hash_set.cpp' || echo '$(srcdir)/'`test_xmt_hash_set.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_xmt_hash_set-test_xmt_hash_set.Tpo $(DEPDIR)/test_xmt_hash_set-test_xmt_hash_set.Po
#	$(AM_V_CXX)source='test_xmt_hash_set.cpp' object='test_xmt_hash_set-test_xmt_hash_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_xmt_hash_set_CXXFLAGS) $(CXXFLAGS) -c -o test_xmt_hash_set-test_xmt_hash_set.o `test -f 'test_xmt_hash_set.cpp' || echo '$(srcdir)/'`test_xmt_hash_set.cpp

test_xmt_hash_set-test_xmt_hash_set.obj: test_xmt_hash_set.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_xmt_hash_set_CXXFLAGS) $(CXXFLAGS) -MT test_xmt_hash_set-test_xmt_hash_set.obj -MD -MP -MF $(DEPDIR)/test_xmt_hash_set-test_xmt_hash_set.Tpo -c -o test_xmt_hash_set-test_xmt_hash_set.obj `if test -f 'test_xmt_hash_set.cpp'; then $(CYGPATH_W) 'test_xmt_hash_set.cpp'; else $(CYGPATH_W) '$(srcdir)/test_xmt_hash_set.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_xmt_hash_set-test_xmt_hash_set.Tpo $(DEPDIR)/test_xmt_hash_set-test_xmt_hash_set.Po
#	$(AM_V_CXX)source='test_xmt_hash_set.cpp' object='test_xmt_hash_set-test_xmt_hash_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_xmt_hash_set_CXXFLAGS) $(CXXFLAGS) -c -o test_xmt_hash_set-test_xmt_hash_set.obj `if test -f 'test_xmt_hash_set.cpp'; then $(CYGPATH_W) 'test_xmt_hash_set.cpp'; else $(CYGPATH_W) '$(srcdir)/test_xmt_hash_set.cpp'; fi`

test_xmt_hash_table-test_xmt_hash_table.o: test_xmt_hash_table.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_xmt_hash_table_CXXFLAGS) $(CXXFLAGS) -MT test_xmt_hash_table-test_xmt_hash_table.o -MD -MP -MF $(DEPDIR)/test_xmt_hash_table-test_xmt_hash_table.Tpo -c -o test_xmt_hash_table-test_xmt_hash_table.o `test -f 'test_xmt_hash_table.cpp' || echo '$(srcdir)/'`test_xmt_hash_table.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_xmt_hash_table-test_xmt_hash_table.Tpo $(DEPDIR)/test_xmt_hash_table-test_xmt_hash_table.Po
#	$(AM_V_CXX)source='test_xmt_hash_table.cpp' object='test_xmt_hash_table-test_xmt_hash_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_xmt_hash_table_CXXFLAGS) $(CXXFLAGS) -c -o test_xmt_hash_table-test_xmt_hash_table.o `test -f 'test_xmt_hash_table.cpp' || echo '$(srcdir)/'`test_xmt_hash_table.cpp

test_xmt_hash_table-test_xmt_hash_table.obj: test_xmt_hash_table.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_xmt_hash_table_CXXFLAGS) $(CXXFLAGS) -MT test_xmt_hash_table-test_xmt_hash_table.obj -MD -MP -MF $(DEPDIR)/test_xmt_hash_table-test_xmt_hash_table.Tpo -c -o test_xmt_hash_table-test_xmt_hash_table.obj `if test -f 'test_xmt_hash_table.cpp'; then $(CYGPATH_W) 'test_xmt_hash_table.cpp'; else $(CYGPATH_W) '$(srcdir)/test_xmt_hash_table.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_xmt_hash_table-test_xmt_hash_table.Tpo $(DEPDIR)/test_xmt_hash_table-test_xmt_hash_table.Po
#	$(AM_V_CXX)source='test_xmt_hash_table.cpp' object='test_xmt_hash_table-test_xmt_hash_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_xmt_hash_table_CXXFLAGS) $(CXXFLAGS) -c -o test_xmt_hash_table-test_xmt_hash_table.obj `if test -f 'test_xmt_hash_table.cpp'; then $(CYGPATH_W) 'test_xmt_hash_table.cpp'; else $(CYGPATH_W) '$(srcdir)/test_xmt_hash_table.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-local

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-local pdf pdf-am ps ps-am tags \
	uninstall uninstall-am


#mostlyclean-local:
#	/bin/rm -f $(EXTRA_PROGRAMS)
#	/bin/rm -f *.ti
#	/bin/rm -f *.ii
#	/bin/rm -f *.pl
#mostlyclean-local:
#	/bin/rm -f $(EXTRA_PROGRAMS)
#	/bin/rm -rf *.dSYM
mostlyclean-local:
	/bin/rm -f $(EXTRA_PROGRAMS)

buildtests: $(check_PROGRAMS)

buildall: $(check_PROGRAMS) $(EXTRA_PROGRAMS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
